[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"ChildToParentAPI.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/ChildToParentAPI.svelte                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let SvelteComponentDev, component_subscribe, dispatch_dev, globals, init, noop, safe_not_equal, validate_slots, validate_store;\n  module1.link(\"svelte/internal\", {\n    SvelteComponentDev(v) {\n      SvelteComponentDev = v;\n    },\n\n    component_subscribe(v) {\n      component_subscribe = v;\n    },\n\n    dispatch_dev(v) {\n      dispatch_dev = v;\n    },\n\n    globals(v) {\n      globals = v;\n    },\n\n    init(v) {\n      init = v;\n    },\n\n    noop(v) {\n      noop = v;\n    },\n\n    safe_not_equal(v) {\n      safe_not_equal = v;\n    },\n\n    validate_slots(v) {\n      validate_slots = v;\n    },\n\n    validate_store(v) {\n      validate_store = v;\n    }\n\n  }, 0);\n  let PARENT_URL, CHILD_URL;\n  module1.link(\"/public/constants\", {\n    PARENT_URL(v) {\n      PARENT_URL = v;\n    },\n\n    CHILD_URL(v) {\n      CHILD_URL = v;\n    }\n\n  }, 1);\n  let incomingMessageText, count;\n  module1.link(\"/imports/api/stores\", {\n    incomingMessageText(v) {\n      incomingMessageText = v;\n    },\n\n    count(v) {\n      count = v;\n    }\n\n  }, 2);\n\n  let ___SVELTE_HMR_HOT_API;\n\n  module1.link(\"meteor/zodern:melte/hmr-runtime.js\", {\n    \"*\"(v) {\n      ___SVELTE_HMR_HOT_API = v;\n    }\n\n  }, 3);\n\n  let ___SVELTE_HMR_HOT_API_PROXY_ADAPTER;\n\n  module1.link(\"meteor/zodern:melte/proxy-adapter.js\", {\n    adapter(v) {\n      ___SVELTE_HMR_HOT_API_PROXY_ADAPTER = v;\n    }\n\n  }, 4);\n  const {\n    Error: Error_1,\n    console: console_1\n  } = globals;\n  const file = \"imports/api/ChildToParentAPI.svelte\";\n\n  function create_fragment(ctx) {\n    const block = {\n      c: noop,\n      l: function claim(nodes) {\n        throw new Error_1(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      },\n      m: noop,\n      p: noop,\n      i: noop,\n      o: noop,\n      d: noop\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_fragment.name,\n      type: \"component\",\n      source: \"\",\n      ctx\n    });\n    return block;\n  }\n\n  function alertMessage(args) {\n    //sanity check\n    console.log(\"alertMessage function triggered on parent with args \".concat(args, \"!\")); //check args and alert\n\n    if (typeof args.messageText === \"string\") {\n      alert(args.messageText);\n    }\n  }\n\n  function instance($$self, $$props, $$invalidate) {\n    let $count;\n    validate_store(count, 'count');\n    component_subscribe($$self, count, $$value => $$invalidate(0, $count = $$value));\n    let {\n      $$slots: slots = {},\n      $$scope\n    } = $$props;\n    validate_slots('ChildToParentAPI', slots, []);\n\n    function displayMessage(args) {\n      //sanity check\n      console.log(\"displayMessage function triggered on parent with args \".concat(args, \"!\")); //check messageText is string\n\n      if (typeof args.messageText === \"string\") {\n        incomingMessageText.set(args.messageText);\n      }\n    } //function that increments count\n\n\n    const incrementCount = () => {\n      console.log(\"incrementCount function triggered on parent!\");\n      console.log($count);\n      count.set($count + 1);\n    }; //function that decrements count\n\n\n    const decrementCount = () => {\n      console.log(\"decrementCount function triggered on parent!\");\n      count.set($count - 1);\n    }; //message handler\n\n\n    window.addEventListener(\"message\", function (message) {\n      //function adapter\n      const functionAdapter = {\n        displayMessage,\n        alertMessage,\n        incrementCount,\n        decrementCount\n      };\n\n      if (message.origin === CHILD_URL) {\n        //sanity check\n        console.log(\"incoming message in parent MessageHandler from child!\");\n        console.log(message); //parse input\n\n        functionName = message.data.function;\n        args = message.data.args; //call appropriate function\n\n        if (functionAdapter[functionName]) {\n          functionAdapter[functionName](args);\n        } else {\n          throw new Error(\"invalid function name\");\n        }\n      } else if (message.origin === PARENT_URL) {\n        //sanity check\n        console.log(\"incoming message in parent MessageHandler from own URL\");\n      } else {\n        //permission denied\n        throw new Error(\"invalid parent URL, permission denied\");\n      }\n    });\n    const writable_props = [];\n    Object.keys($$props).forEach(key => {\n      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<ChildToParentAPI> was created with unknown prop '\".concat(key, \"'\"));\n    });\n\n    $$self.$capture_state = () => ({\n      PARENT_URL,\n      CHILD_URL,\n      incomingMessageText,\n      count,\n      displayMessage,\n      alertMessage,\n      incrementCount,\n      decrementCount,\n      $count\n    });\n\n    return [];\n  }\n\n  class ChildToParentAPI extends SvelteComponentDev {\n    constructor(options) {\n      super(options);\n      init(this, options, instance, create_fragment, safe_not_equal, {});\n      dispatch_dev(\"SvelteRegisterComponent\", {\n        component: this,\n        tagName: \"ChildToParentAPI\",\n        options,\n        id: create_fragment.name\n      });\n    }\n\n  }\n\n  if (module && module.hot) {\n    ChildToParentAPI = ___SVELTE_HMR_HOT_API.applyHmr({\n      m: module,\n      id: \"imports/api/ChildToParentAPI.svelte\",\n      hotOptions: {\n        \"preserveLocalState\": false,\n        \"noPreserveStateKey\": [\"@hmr:reset\", \"@!hmr\"],\n        \"preserveAllLocalStateKey\": \"@hmr:keep-all\",\n        \"preserveLocalStateKey\": \"@hmr:keep\",\n        \"noReload\": false,\n        \"optimistic\": true,\n        \"acceptNamedExports\": true,\n        \"acceptAccessors\": true,\n        \"injectCss\": true,\n        \"cssEjectDelay\": 100,\n        \"native\": false,\n        \"importAdapterName\": \"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\",\n        \"noOverlay\": false\n      },\n      Component: ChildToParentAPI,\n      ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER,\n      acceptable: true,\n      preserveLocalState: false,\n      cssId: undefined,\n      nonCssHash: undefined,\n      ignoreCss: false\n    });\n  }\n\n  module1.exportDefault(ChildToParentAPI);\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stores.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/stores.js                                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  iFrameLoaded: () => iFrameLoaded,\n  incomingMessageText: () => incomingMessageText,\n  count: () => count\n});\nlet writable;\nmodule.link(\"svelte/store\", {\n  writable(v) {\n    writable = v;\n  }\n\n}, 0);\nconst iFrameLoaded = writable(false);\nconst incomingMessageText = writable(\"\");\nconst count = writable(0);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AlertMessageForm.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/AlertMessageForm.svelte                                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let SvelteComponentDev, add_location, append_dev, attr_dev, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, noop, prevent_default, run_all, safe_not_equal, set_input_value, space, validate_slots;\n  module1.link(\"svelte/internal\", {\n    SvelteComponentDev(v) {\n      SvelteComponentDev = v;\n    },\n\n    add_location(v) {\n      add_location = v;\n    },\n\n    append_dev(v) {\n      append_dev = v;\n    },\n\n    attr_dev(v) {\n      attr_dev = v;\n    },\n\n    detach_dev(v) {\n      detach_dev = v;\n    },\n\n    dispatch_dev(v) {\n      dispatch_dev = v;\n    },\n\n    element(v) {\n      element = v;\n    },\n\n    globals(v) {\n      globals = v;\n    },\n\n    init(v) {\n      init = v;\n    },\n\n    insert_dev(v) {\n      insert_dev = v;\n    },\n\n    listen_dev(v) {\n      listen_dev = v;\n    },\n\n    noop(v) {\n      noop = v;\n    },\n\n    prevent_default(v) {\n      prevent_default = v;\n    },\n\n    run_all(v) {\n      run_all = v;\n    },\n\n    safe_not_equal(v) {\n      safe_not_equal = v;\n    },\n\n    set_input_value(v) {\n      set_input_value = v;\n    },\n\n    space(v) {\n      space = v;\n    },\n\n    validate_slots(v) {\n      validate_slots = v;\n    }\n\n  }, 0);\n  let iFrameLoaded;\n  module1.link(\"../api/stores\", {\n    iFrameLoaded(v) {\n      iFrameLoaded = v;\n    }\n\n  }, 1);\n\n  let ___SVELTE_HMR_HOT_API;\n\n  module1.link(\"meteor/zodern:melte/hmr-runtime.js\", {\n    \"*\"(v) {\n      ___SVELTE_HMR_HOT_API = v;\n    }\n\n  }, 2);\n\n  let ___SVELTE_HMR_HOT_API_PROXY_ADAPTER;\n\n  module1.link(\"meteor/zodern:melte/proxy-adapter.js\", {\n    adapter(v) {\n      ___SVELTE_HMR_HOT_API_PROXY_ADAPTER = v;\n    }\n\n  }, 3);\n  const {\n    console: console_1\n  } = globals;\n  const file = \"imports/ui/AlertMessageForm.svelte\";\n\n  function create_fragment(ctx) {\n    let div;\n    let form;\n    let h3;\n    let label;\n    let t1;\n    let br;\n    let t2;\n    let input;\n    let t3;\n    let button;\n    let mounted;\n    let dispose;\n    const block = {\n      c: function create() {\n        div = element(\"div\");\n        form = element(\"form\");\n        h3 = element(\"h3\");\n        label = element(\"label\");\n        label.textContent = \"Send a message to alert on the child app:\";\n        t1 = space();\n        br = element(\"br\");\n        t2 = space();\n        input = element(\"input\");\n        t3 = space();\n        button = element(\"button\");\n        button.textContent = \"Send Message\";\n        attr_dev(label, \"for\", \"html\");\n        add_location(label, file, 20, 12, 678);\n        add_location(h3, file, 20, 8, 674);\n        add_location(br, file, 21, 8, 760);\n        attr_dev(input, \"type\", \"text\");\n        attr_dev(input, \"name\", \"text\");\n        attr_dev(input, \"placeholder\", \"Type message to send\");\n        add_location(input, file, 22, 8, 775);\n        attr_dev(button, \"type\", \"submit\");\n        add_location(button, file, 23, 8, 884);\n        add_location(form, file, 19, 4, 619);\n        add_location(div, file, 18, 0, 609);\n      },\n      l: function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, form);\n        append_dev(form, h3);\n        append_dev(h3, label);\n        append_dev(form, t1);\n        append_dev(form, br);\n        append_dev(form, t2);\n        append_dev(form, input);\n        set_input_value(input,\n        /*outgoingMessageText*/\n        ctx[0]);\n        append_dev(form, t3);\n        append_dev(form, button);\n\n        if (!mounted) {\n          dispose = [listen_dev(input, \"input\",\n          /*input_input_handler*/\n          ctx[2]), listen_dev(form, \"submit\", prevent_default(\n          /*handleSubmit*/\n          ctx[1]), false, true, false)];\n          mounted = true;\n        }\n      },\n      p: function update(ctx, _ref) {\n        let [dirty] = _ref;\n\n        if (dirty &\n        /*outgoingMessageText*/\n        1 && input.value !==\n        /*outgoingMessageText*/\n        ctx[0]) {\n          set_input_value(input,\n          /*outgoingMessageText*/\n          ctx[0]);\n        }\n      },\n      i: noop,\n      o: noop,\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_fragment.name,\n      type: \"component\",\n      source: \"\",\n      ctx\n    });\n    return block;\n  }\n\n  function instance($$self, $$props, $$invalidate) {\n    let outgoingMessageText;\n    let {\n      $$slots: slots = {},\n      $$scope\n    } = $$props;\n    validate_slots('AlertMessageForm', slots, []);\n\n    const handleSubmit = () => {\n      //check that iFrame has loaded before accessing it and sending message\n      if (iFrameLoaded) {\n        console.log('Sending message to display from parent to child!');\n        document.getElementById('iframe').contentWindow.postMessage({\n          function: 'alertMessage',\n          args: {\n            messageText: outgoingMessageText\n          }\n        }, \"http://localhost:3000/\");\n      } else {\n        throw new Meteor.Error('iFrame not loaded yet!');\n      }\n    };\n\n    const writable_props = [];\n    Object.keys($$props).forEach(key => {\n      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<AlertMessageForm> was created with unknown prop '\".concat(key, \"'\"));\n    });\n\n    function input_input_handler() {\n      outgoingMessageText = this.value;\n      $$invalidate(0, outgoingMessageText);\n    }\n\n    $$self.$capture_state = () => ({\n      iFrameLoaded,\n      handleSubmit,\n      outgoingMessageText\n    });\n\n    $$self.$inject_state = $$props => {\n      if ('outgoingMessageText' in $$props) $$invalidate(0, outgoingMessageText = $$props.outgoingMessageText);\n    };\n\n    if ($$props && \"$$inject\" in $$props) {\n      $$self.$inject_state($$props.$$inject);\n    }\n\n    $: $$invalidate(0, outgoingMessageText = \"\");\n\n    return [outgoingMessageText, handleSubmit, input_input_handler];\n  }\n\n  class AlertMessageForm extends SvelteComponentDev {\n    constructor(options) {\n      super(options);\n      init(this, options, instance, create_fragment, safe_not_equal, {});\n      dispatch_dev(\"SvelteRegisterComponent\", {\n        component: this,\n        tagName: \"AlertMessageForm\",\n        options,\n        id: create_fragment.name\n      });\n    }\n\n  }\n\n  if (module && module.hot) {\n    AlertMessageForm = ___SVELTE_HMR_HOT_API.applyHmr({\n      m: module,\n      id: \"imports/ui/AlertMessageForm.svelte\",\n      hotOptions: {\n        \"preserveLocalState\": false,\n        \"noPreserveStateKey\": [\"@hmr:reset\", \"@!hmr\"],\n        \"preserveAllLocalStateKey\": \"@hmr:keep-all\",\n        \"preserveLocalStateKey\": \"@hmr:keep\",\n        \"noReload\": false,\n        \"optimistic\": true,\n        \"acceptNamedExports\": true,\n        \"acceptAccessors\": true,\n        \"injectCss\": true,\n        \"cssEjectDelay\": 100,\n        \"native\": false,\n        \"importAdapterName\": \"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\",\n        \"noOverlay\": false\n      },\n      Component: AlertMessageForm,\n      ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER,\n      acceptable: true,\n      preserveLocalState: false,\n      cssId: undefined,\n      nonCssHash: undefined,\n      ignoreCss: false\n    });\n  }\n\n  module1.exportDefault(AlertMessageForm);\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/App.svelte                                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let SvelteComponentDev, add_location, append_dev, attr_dev, create_component, destroy_component, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, mount_component, noop, safe_not_equal, space, src_url_equal, transition_in, transition_out, validate_slots;\n  module1.link(\"svelte/internal\", {\n    SvelteComponentDev(v) {\n      SvelteComponentDev = v;\n    },\n\n    add_location(v) {\n      add_location = v;\n    },\n\n    append_dev(v) {\n      append_dev = v;\n    },\n\n    attr_dev(v) {\n      attr_dev = v;\n    },\n\n    create_component(v) {\n      create_component = v;\n    },\n\n    destroy_component(v) {\n      destroy_component = v;\n    },\n\n    detach_dev(v) {\n      detach_dev = v;\n    },\n\n    dispatch_dev(v) {\n      dispatch_dev = v;\n    },\n\n    element(v) {\n      element = v;\n    },\n\n    globals(v) {\n      globals = v;\n    },\n\n    init(v) {\n      init = v;\n    },\n\n    insert_dev(v) {\n      insert_dev = v;\n    },\n\n    listen_dev(v) {\n      listen_dev = v;\n    },\n\n    mount_component(v) {\n      mount_component = v;\n    },\n\n    noop(v) {\n      noop = v;\n    },\n\n    safe_not_equal(v) {\n      safe_not_equal = v;\n    },\n\n    space(v) {\n      space = v;\n    },\n\n    src_url_equal(v) {\n      src_url_equal = v;\n    },\n\n    transition_in(v) {\n      transition_in = v;\n    },\n\n    transition_out(v) {\n      transition_out = v;\n    },\n\n    validate_slots(v) {\n      validate_slots = v;\n    }\n\n  }, 0);\n  let Message;\n  module1.link(\"/imports/ui/Message\", {\n    default(v) {\n      Message = v;\n    }\n\n  }, 1);\n  let Counter;\n  module1.link(\"/imports/ui/Counter\", {\n    default(v) {\n      Counter = v;\n    }\n\n  }, 2);\n  let DisplayMessageForm;\n  module1.link(\"/imports/ui/DisplayMessageForm\", {\n    default(v) {\n      DisplayMessageForm = v;\n    }\n\n  }, 3);\n  let AlertMessageForm;\n  module1.link(\"/imports/ui/AlertMessageForm\", {\n    default(v) {\n      AlertMessageForm = v;\n    }\n\n  }, 4);\n  let ChildCounterButtons;\n  module1.link(\"/imports/ui/ChildCounterButtons\", {\n    default(v) {\n      ChildCounterButtons = v;\n    }\n\n  }, 5);\n  let iFrameLoaded;\n  module1.link(\"/imports/api/stores\", {\n    iFrameLoaded(v) {\n      iFrameLoaded = v;\n    }\n\n  }, 6);\n  let ChildToParentAPI;\n  module1.link(\"/imports/api/ChildToParentAPI\", {\n    default(v) {\n      ChildToParentAPI = v;\n    }\n\n  }, 7);\n\n  let ___SVELTE_HMR_HOT_API;\n\n  module1.link(\"meteor/zodern:melte/hmr-runtime.js\", {\n    \"*\"(v) {\n      ___SVELTE_HMR_HOT_API = v;\n    }\n\n  }, 8);\n\n  let ___SVELTE_HMR_HOT_API_PROXY_ADAPTER;\n\n  module1.link(\"meteor/zodern:melte/proxy-adapter.js\", {\n    adapter(v) {\n      ___SVELTE_HMR_HOT_API_PROXY_ADAPTER = v;\n    }\n\n  }, 9);\n  const {\n    console: console_1\n  } = globals;\n  const file = \"imports/ui/App.svelte\";\n\n  function create_fragment(ctx) {\n    let div1;\n    let childtoparentapi;\n    let t0;\n    let h1;\n    let t2;\n    let message;\n    let t3;\n    let counter;\n    let t4;\n    let displaymessageform;\n    let t5;\n    let alertmessageform;\n    let t6;\n    let childcounterbuttons;\n    let t7;\n    let br;\n    let t8;\n    let div0;\n    let iframe;\n    let iframe_src_value;\n    let current;\n    let mounted;\n    let dispose;\n    childtoparentapi = new ChildToParentAPI({\n      $$inline: true\n    });\n    message = new Message({\n      $$inline: true\n    });\n    counter = new Counter({\n      $$inline: true\n    });\n    displaymessageform = new DisplayMessageForm({\n      $$inline: true\n    });\n    alertmessageform = new AlertMessageForm({\n      $$inline: true\n    });\n    childcounterbuttons = new ChildCounterButtons({\n      $$inline: true\n    });\n    const block = {\n      c: function create() {\n        div1 = element(\"div\");\n        create_component(childtoparentapi.$$.fragment);\n        t0 = space();\n        h1 = element(\"h1\");\n        h1.textContent = \"Svelte Parent App\";\n        t2 = space();\n        create_component(message.$$.fragment);\n        t3 = space();\n        create_component(counter.$$.fragment);\n        t4 = space();\n        create_component(displaymessageform.$$.fragment);\n        t5 = space();\n        create_component(alertmessageform.$$.fragment);\n        t6 = space();\n        create_component(childcounterbuttons.$$.fragment);\n        t7 = space();\n        br = element(\"br\");\n        t8 = space();\n        div0 = element(\"div\");\n        iframe = element(\"iframe\");\n        add_location(h1, file, 23, 2, 678);\n        add_location(br, file, 29, 2, 809);\n        attr_dev(iframe, \"id\", \"iframe\");\n        attr_dev(iframe, \"title\", \"react-child-app\");\n        if (!src_url_equal(iframe.src, iframe_src_value = \"http://localhost:3000/\")) attr_dev(iframe, \"src\", iframe_src_value);\n        attr_dev(iframe, \"width\", \"600\");\n        attr_dev(iframe, \"height\", \"300\");\n        attr_dev(iframe, \"sandbox\", \"allow-same-origin allow-scripts allow-forms allow-top-navigation allow-modals\");\n        add_location(iframe, file, 32, 4, 829);\n        add_location(div0, file, 31, 2, 819);\n        attr_dev(div1, \"class\", \"container\");\n        add_location(div1, file, 21, 0, 629);\n      },\n      l: function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, div1, anchor);\n        mount_component(childtoparentapi, div1, null);\n        append_dev(div1, t0);\n        append_dev(div1, h1);\n        append_dev(div1, t2);\n        mount_component(message, div1, null);\n        append_dev(div1, t3);\n        mount_component(counter, div1, null);\n        append_dev(div1, t4);\n        mount_component(displaymessageform, div1, null);\n        append_dev(div1, t5);\n        mount_component(alertmessageform, div1, null);\n        append_dev(div1, t6);\n        mount_component(childcounterbuttons, div1, null);\n        append_dev(div1, t7);\n        append_dev(div1, br);\n        append_dev(div1, t8);\n        append_dev(div1, div0);\n        append_dev(div0, iframe);\n        current = true;\n\n        if (!mounted) {\n          dispose = listen_dev(iframe, \"load\",\n          /*oniFrameLoad*/\n          ctx[0], false, false, false);\n          mounted = true;\n        }\n      },\n      p: noop,\n      i: function intro(local) {\n        if (current) return;\n        transition_in(childtoparentapi.$$.fragment, local);\n        transition_in(message.$$.fragment, local);\n        transition_in(counter.$$.fragment, local);\n        transition_in(displaymessageform.$$.fragment, local);\n        transition_in(alertmessageform.$$.fragment, local);\n        transition_in(childcounterbuttons.$$.fragment, local);\n        current = true;\n      },\n      o: function outro(local) {\n        transition_out(childtoparentapi.$$.fragment, local);\n        transition_out(message.$$.fragment, local);\n        transition_out(counter.$$.fragment, local);\n        transition_out(displaymessageform.$$.fragment, local);\n        transition_out(alertmessageform.$$.fragment, local);\n        transition_out(childcounterbuttons.$$.fragment, local);\n        current = false;\n      },\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(div1);\n        destroy_component(childtoparentapi);\n        destroy_component(message);\n        destroy_component(counter);\n        destroy_component(displaymessageform);\n        destroy_component(alertmessageform);\n        destroy_component(childcounterbuttons);\n        mounted = false;\n        dispose();\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_fragment.name,\n      type: \"component\",\n      source: \"\",\n      ctx\n    });\n    return block;\n  }\n\n  function instance($$self, $$props, $$invalidate) {\n    let {\n      $$slots: slots = {},\n      $$scope\n    } = $$props;\n    validate_slots('App', slots, []);\n\n    const oniFrameLoad = () => {\n      iFrameLoaded.set(true);\n\n      if (iFrameLoaded) {\n        console.log('child iFrame loaded, logging from parent!');\n      }\n    };\n\n    const writable_props = [];\n    Object.keys($$props).forEach(key => {\n      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<App> was created with unknown prop '\".concat(key, \"'\"));\n    });\n\n    $$self.$capture_state = () => ({\n      Message,\n      Counter,\n      DisplayMessageForm,\n      AlertMessageForm,\n      ChildCounterButtons,\n      iFrameLoaded,\n      ChildToParentAPI,\n      oniFrameLoad\n    });\n\n    return [oniFrameLoad];\n  }\n\n  class App extends SvelteComponentDev {\n    constructor(options) {\n      super(options);\n      init(this, options, instance, create_fragment, safe_not_equal, {});\n      dispatch_dev(\"SvelteRegisterComponent\", {\n        component: this,\n        tagName: \"App\",\n        options,\n        id: create_fragment.name\n      });\n    }\n\n  }\n\n  if (module && module.hot) {\n    App = ___SVELTE_HMR_HOT_API.applyHmr({\n      m: module,\n      id: \"imports/ui/App.svelte\",\n      hotOptions: {\n        \"preserveLocalState\": false,\n        \"noPreserveStateKey\": [\"@hmr:reset\", \"@!hmr\"],\n        \"preserveAllLocalStateKey\": \"@hmr:keep-all\",\n        \"preserveLocalStateKey\": \"@hmr:keep\",\n        \"noReload\": false,\n        \"optimistic\": true,\n        \"acceptNamedExports\": true,\n        \"acceptAccessors\": true,\n        \"injectCss\": true,\n        \"cssEjectDelay\": 100,\n        \"native\": false,\n        \"importAdapterName\": \"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\",\n        \"noOverlay\": false\n      },\n      Component: App,\n      ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER,\n      acceptable: true,\n      preserveLocalState: false,\n      cssId: undefined,\n      nonCssHash: undefined,\n      ignoreCss: false\n    });\n  }\n\n  module1.exportDefault(App);\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ChildCounterButtons.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/ChildCounterButtons.svelte                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let SvelteComponentDev, add_location, append_dev, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, noop, run_all, safe_not_equal, space, validate_slots;\n  module1.link(\"svelte/internal\", {\n    SvelteComponentDev(v) {\n      SvelteComponentDev = v;\n    },\n\n    add_location(v) {\n      add_location = v;\n    },\n\n    append_dev(v) {\n      append_dev = v;\n    },\n\n    detach_dev(v) {\n      detach_dev = v;\n    },\n\n    dispatch_dev(v) {\n      dispatch_dev = v;\n    },\n\n    element(v) {\n      element = v;\n    },\n\n    globals(v) {\n      globals = v;\n    },\n\n    init(v) {\n      init = v;\n    },\n\n    insert_dev(v) {\n      insert_dev = v;\n    },\n\n    listen_dev(v) {\n      listen_dev = v;\n    },\n\n    noop(v) {\n      noop = v;\n    },\n\n    run_all(v) {\n      run_all = v;\n    },\n\n    safe_not_equal(v) {\n      safe_not_equal = v;\n    },\n\n    space(v) {\n      space = v;\n    },\n\n    validate_slots(v) {\n      validate_slots = v;\n    }\n\n  }, 0);\n  let iFrameLoaded;\n  module1.link(\"/imports/api/stores\", {\n    iFrameLoaded(v) {\n      iFrameLoaded = v;\n    }\n\n  }, 1);\n\n  let ___SVELTE_HMR_HOT_API;\n\n  module1.link(\"meteor/zodern:melte/hmr-runtime.js\", {\n    \"*\"(v) {\n      ___SVELTE_HMR_HOT_API = v;\n    }\n\n  }, 2);\n\n  let ___SVELTE_HMR_HOT_API_PROXY_ADAPTER;\n\n  module1.link(\"meteor/zodern:melte/proxy-adapter.js\", {\n    adapter(v) {\n      ___SVELTE_HMR_HOT_API_PROXY_ADAPTER = v;\n    }\n\n  }, 3);\n  const {\n    console: console_1\n  } = globals;\n  const file = \"imports/ui/ChildCounterButtons.svelte\";\n\n  function create_fragment(ctx) {\n    let div;\n    let h3;\n    let t1;\n    let button0;\n    let t3;\n    let button1;\n    let mounted;\n    let dispose;\n    const block = {\n      c: function create() {\n        div = element(\"div\");\n        h3 = element(\"h3\");\n        h3.textContent = \"Change count on the child app:\";\n        t1 = space();\n        button0 = element(\"button\");\n        button0.textContent = \"+\";\n        t3 = space();\n        button1 = element(\"button\");\n        button1.textContent = \"-\";\n        add_location(h3, file, 25, 4, 728);\n        add_location(button0, file, 26, 4, 772);\n        add_location(button1, file, 27, 4, 816);\n        add_location(div, file, 24, 0, 718);\n      },\n      l: function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, h3);\n        append_dev(div, t1);\n        append_dev(div, button0);\n        append_dev(div, t3);\n        append_dev(div, button1);\n\n        if (!mounted) {\n          dispose = [listen_dev(button0, \"click\",\n          /*increment*/\n          ctx[0], false, false, false), listen_dev(button1, \"click\",\n          /*decrement*/\n          ctx[1], false, false, false)];\n          mounted = true;\n        }\n      },\n      p: noop,\n      i: noop,\n      o: noop,\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_fragment.name,\n      type: \"component\",\n      source: \"\",\n      ctx\n    });\n    return block;\n  }\n\n  function instance($$self, $$props, $$invalidate) {\n    let {\n      $$slots: slots = {},\n      $$scope\n    } = $$props;\n    validate_slots('ChildCounterButtons', slots, []);\n\n    const increment = () => {\n      console.log('one increment trigger on parent');\n\n      if (iFrameLoaded) {\n        document.getElementById('iframe').contentWindow.postMessage({\n          function: 'incrementCount'\n        }, \"http://localhost:3000/\");\n      } else {\n        throw new Meteor.Error('iFrame not loaded yet!');\n      }\n\n      return;\n    };\n\n    const decrement = () => {\n      if (iFrameLoaded) {\n        document.getElementById('iframe').contentWindow.postMessage({\n          function: 'decrementCount'\n        }, \"http://localhost:3000/\");\n      } else {\n        throw new Meteor.Error('iFrame not loaded yet!');\n      }\n    };\n\n    const writable_props = [];\n    Object.keys($$props).forEach(key => {\n      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<ChildCounterButtons> was created with unknown prop '\".concat(key, \"'\"));\n    });\n\n    $$self.$capture_state = () => ({\n      iFrameLoaded,\n      increment,\n      decrement\n    });\n\n    return [increment, decrement];\n  }\n\n  class ChildCounterButtons extends SvelteComponentDev {\n    constructor(options) {\n      super(options);\n      init(this, options, instance, create_fragment, safe_not_equal, {});\n      dispatch_dev(\"SvelteRegisterComponent\", {\n        component: this,\n        tagName: \"ChildCounterButtons\",\n        options,\n        id: create_fragment.name\n      });\n    }\n\n  }\n\n  if (module && module.hot) {\n    ChildCounterButtons = ___SVELTE_HMR_HOT_API.applyHmr({\n      m: module,\n      id: \"imports/ui/ChildCounterButtons.svelte\",\n      hotOptions: {\n        \"preserveLocalState\": false,\n        \"noPreserveStateKey\": [\"@hmr:reset\", \"@!hmr\"],\n        \"preserveAllLocalStateKey\": \"@hmr:keep-all\",\n        \"preserveLocalStateKey\": \"@hmr:keep\",\n        \"noReload\": false,\n        \"optimistic\": true,\n        \"acceptNamedExports\": true,\n        \"acceptAccessors\": true,\n        \"injectCss\": true,\n        \"cssEjectDelay\": 100,\n        \"native\": false,\n        \"importAdapterName\": \"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\",\n        \"noOverlay\": false\n      },\n      Component: ChildCounterButtons,\n      ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER,\n      acceptable: true,\n      preserveLocalState: false,\n      cssId: undefined,\n      nonCssHash: undefined,\n      ignoreCss: false\n    });\n  }\n\n  module1.exportDefault(ChildCounterButtons);\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Counter.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/Counter.svelte                                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let SvelteComponentDev, add_location, append_dev, component_subscribe, detach_dev, dispatch_dev, element, init, insert_dev, listen_dev, noop, run_all, safe_not_equal, set_data_dev, space, text, validate_slots, validate_store;\n  module1.link(\"svelte/internal\", {\n    SvelteComponentDev(v) {\n      SvelteComponentDev = v;\n    },\n\n    add_location(v) {\n      add_location = v;\n    },\n\n    append_dev(v) {\n      append_dev = v;\n    },\n\n    component_subscribe(v) {\n      component_subscribe = v;\n    },\n\n    detach_dev(v) {\n      detach_dev = v;\n    },\n\n    dispatch_dev(v) {\n      dispatch_dev = v;\n    },\n\n    element(v) {\n      element = v;\n    },\n\n    init(v) {\n      init = v;\n    },\n\n    insert_dev(v) {\n      insert_dev = v;\n    },\n\n    listen_dev(v) {\n      listen_dev = v;\n    },\n\n    noop(v) {\n      noop = v;\n    },\n\n    run_all(v) {\n      run_all = v;\n    },\n\n    safe_not_equal(v) {\n      safe_not_equal = v;\n    },\n\n    set_data_dev(v) {\n      set_data_dev = v;\n    },\n\n    space(v) {\n      space = v;\n    },\n\n    text(v) {\n      text = v;\n    },\n\n    validate_slots(v) {\n      validate_slots = v;\n    },\n\n    validate_store(v) {\n      validate_store = v;\n    }\n\n  }, 0);\n  let count;\n  module1.link(\"/imports/api/stores\", {\n    count(v) {\n      count = v;\n    }\n\n  }, 1);\n\n  let ___SVELTE_HMR_HOT_API;\n\n  module1.link(\"meteor/zodern:melte/hmr-runtime.js\", {\n    \"*\"(v) {\n      ___SVELTE_HMR_HOT_API = v;\n    }\n\n  }, 2);\n\n  let ___SVELTE_HMR_HOT_API_PROXY_ADAPTER;\n\n  module1.link(\"meteor/zodern:melte/proxy-adapter.js\", {\n    adapter(v) {\n      ___SVELTE_HMR_HOT_API_PROXY_ADAPTER = v;\n    }\n\n  }, 3);\n  const file = \"imports/ui/Counter.svelte\";\n\n  function create_fragment(ctx) {\n    let div;\n    let h2;\n    let t0;\n    let t1;\n    let t2;\n    let button0;\n    let t4;\n    let button1;\n    let mounted;\n    let dispose;\n    const block = {\n      c: function create() {\n        div = element(\"div\");\n        h2 = element(\"h2\");\n        t0 = text(\"The current count is: \");\n        t1 = text(\n        /*$count*/\n        ctx[0]);\n        t2 = space();\n        button0 = element(\"button\");\n        button0.textContent = \"+\";\n        t4 = space();\n        button1 = element(\"button\");\n        button1.textContent = \"-\";\n        add_location(h2, file, 5, 4, 77);\n        add_location(button0, file, 6, 4, 121);\n        add_location(button1, file, 14, 4, 226);\n        add_location(div, file, 4, 0, 67);\n      },\n      l: function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, h2);\n        append_dev(h2, t0);\n        append_dev(h2, t1);\n        append_dev(div, t2);\n        append_dev(div, button0);\n        append_dev(div, t4);\n        append_dev(div, button1);\n\n        if (!mounted) {\n          dispose = [listen_dev(button0, \"click\",\n          /*click_handler*/\n          ctx[1], false, false, false), listen_dev(button1, \"click\",\n          /*click_handler_1*/\n          ctx[2], false, false, false)];\n          mounted = true;\n        }\n      },\n      p: function update(ctx, _ref) {\n        let [dirty] = _ref;\n        if (dirty &\n        /*$count*/\n        1) set_data_dev(t1,\n        /*$count*/\n        ctx[0]);\n      },\n      i: noop,\n      o: noop,\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_fragment.name,\n      type: \"component\",\n      source: \"\",\n      ctx\n    });\n    return block;\n  }\n\n  function instance($$self, $$props, $$invalidate) {\n    let $count;\n    validate_store(count, 'count');\n    component_subscribe($$self, count, $$value => $$invalidate(0, $count = $$value));\n    let {\n      $$slots: slots = {},\n      $$scope\n    } = $$props;\n    validate_slots('Counter', slots, []);\n    const writable_props = [];\n    Object.keys($$props).forEach(key => {\n      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(\"<Counter> was created with unknown prop '\".concat(key, \"'\"));\n    });\n\n    const click_handler = () => {\n      count.set($count + 1);\n    };\n\n    const click_handler_1 = () => {\n      count.set($count - 1);\n    };\n\n    $$self.$capture_state = () => ({\n      count,\n      $count\n    });\n\n    return [$count, click_handler, click_handler_1];\n  }\n\n  class Counter extends SvelteComponentDev {\n    constructor(options) {\n      super(options);\n      init(this, options, instance, create_fragment, safe_not_equal, {});\n      dispatch_dev(\"SvelteRegisterComponent\", {\n        component: this,\n        tagName: \"Counter\",\n        options,\n        id: create_fragment.name\n      });\n    }\n\n  }\n\n  if (module && module.hot) {\n    Counter = ___SVELTE_HMR_HOT_API.applyHmr({\n      m: module,\n      id: \"imports/ui/Counter.svelte\",\n      hotOptions: {\n        \"preserveLocalState\": false,\n        \"noPreserveStateKey\": [\"@hmr:reset\", \"@!hmr\"],\n        \"preserveAllLocalStateKey\": \"@hmr:keep-all\",\n        \"preserveLocalStateKey\": \"@hmr:keep\",\n        \"noReload\": false,\n        \"optimistic\": true,\n        \"acceptNamedExports\": true,\n        \"acceptAccessors\": true,\n        \"injectCss\": true,\n        \"cssEjectDelay\": 100,\n        \"native\": false,\n        \"importAdapterName\": \"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\",\n        \"noOverlay\": false\n      },\n      Component: Counter,\n      ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER,\n      acceptable: true,\n      preserveLocalState: false,\n      cssId: undefined,\n      nonCssHash: undefined,\n      ignoreCss: false\n    });\n  }\n\n  module1.exportDefault(Counter);\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"DisplayMessageForm.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/DisplayMessageForm.svelte                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let SvelteComponentDev, add_location, append_dev, attr_dev, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, noop, prevent_default, run_all, safe_not_equal, set_input_value, space, validate_slots;\n  module1.link(\"svelte/internal\", {\n    SvelteComponentDev(v) {\n      SvelteComponentDev = v;\n    },\n\n    add_location(v) {\n      add_location = v;\n    },\n\n    append_dev(v) {\n      append_dev = v;\n    },\n\n    attr_dev(v) {\n      attr_dev = v;\n    },\n\n    detach_dev(v) {\n      detach_dev = v;\n    },\n\n    dispatch_dev(v) {\n      dispatch_dev = v;\n    },\n\n    element(v) {\n      element = v;\n    },\n\n    globals(v) {\n      globals = v;\n    },\n\n    init(v) {\n      init = v;\n    },\n\n    insert_dev(v) {\n      insert_dev = v;\n    },\n\n    listen_dev(v) {\n      listen_dev = v;\n    },\n\n    noop(v) {\n      noop = v;\n    },\n\n    prevent_default(v) {\n      prevent_default = v;\n    },\n\n    run_all(v) {\n      run_all = v;\n    },\n\n    safe_not_equal(v) {\n      safe_not_equal = v;\n    },\n\n    set_input_value(v) {\n      set_input_value = v;\n    },\n\n    space(v) {\n      space = v;\n    },\n\n    validate_slots(v) {\n      validate_slots = v;\n    }\n\n  }, 0);\n  let iFrameLoaded;\n  module1.link(\"../api/stores\", {\n    iFrameLoaded(v) {\n      iFrameLoaded = v;\n    }\n\n  }, 1);\n\n  let ___SVELTE_HMR_HOT_API;\n\n  module1.link(\"meteor/zodern:melte/hmr-runtime.js\", {\n    \"*\"(v) {\n      ___SVELTE_HMR_HOT_API = v;\n    }\n\n  }, 2);\n\n  let ___SVELTE_HMR_HOT_API_PROXY_ADAPTER;\n\n  module1.link(\"meteor/zodern:melte/proxy-adapter.js\", {\n    adapter(v) {\n      ___SVELTE_HMR_HOT_API_PROXY_ADAPTER = v;\n    }\n\n  }, 3);\n  const {\n    console: console_1\n  } = globals;\n  const file = \"imports/ui/DisplayMessageForm.svelte\";\n\n  function create_fragment(ctx) {\n    let div;\n    let form;\n    let h3;\n    let label;\n    let t1;\n    let br;\n    let t2;\n    let input;\n    let t3;\n    let button;\n    let mounted;\n    let dispose;\n    const block = {\n      c: function create() {\n        div = element(\"div\");\n        form = element(\"form\");\n        h3 = element(\"h3\");\n        label = element(\"label\");\n        label.textContent = \"Send a message to display on the child app:\";\n        t1 = space();\n        br = element(\"br\");\n        t2 = space();\n        input = element(\"input\");\n        t3 = space();\n        button = element(\"button\");\n        button.textContent = \"Send Message\";\n        attr_dev(label, \"for\", \"html\");\n        add_location(label, file, 20, 12, 680);\n        add_location(h3, file, 20, 8, 676);\n        add_location(br, file, 21, 8, 764);\n        attr_dev(input, \"type\", \"text\");\n        attr_dev(input, \"name\", \"text\");\n        attr_dev(input, \"placeholder\", \"Type message to send\");\n        add_location(input, file, 22, 8, 779);\n        attr_dev(button, \"type\", \"submit\");\n        add_location(button, file, 23, 8, 888);\n        add_location(form, file, 19, 4, 621);\n        add_location(div, file, 18, 0, 611);\n      },\n      l: function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, form);\n        append_dev(form, h3);\n        append_dev(h3, label);\n        append_dev(form, t1);\n        append_dev(form, br);\n        append_dev(form, t2);\n        append_dev(form, input);\n        set_input_value(input,\n        /*outgoingMessageText*/\n        ctx[0]);\n        append_dev(form, t3);\n        append_dev(form, button);\n\n        if (!mounted) {\n          dispose = [listen_dev(input, \"input\",\n          /*input_input_handler*/\n          ctx[2]), listen_dev(form, \"submit\", prevent_default(\n          /*handleSubmit*/\n          ctx[1]), false, true, false)];\n          mounted = true;\n        }\n      },\n      p: function update(ctx, _ref) {\n        let [dirty] = _ref;\n\n        if (dirty &\n        /*outgoingMessageText*/\n        1 && input.value !==\n        /*outgoingMessageText*/\n        ctx[0]) {\n          set_input_value(input,\n          /*outgoingMessageText*/\n          ctx[0]);\n        }\n      },\n      i: noop,\n      o: noop,\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_fragment.name,\n      type: \"component\",\n      source: \"\",\n      ctx\n    });\n    return block;\n  }\n\n  function instance($$self, $$props, $$invalidate) {\n    let outgoingMessageText;\n    let {\n      $$slots: slots = {},\n      $$scope\n    } = $$props;\n    validate_slots('DisplayMessageForm', slots, []);\n\n    const handleSubmit = () => {\n      //check that iFrame has loaded before accessing it and sending message\n      if (iFrameLoaded) {\n        console.log('Sending message to display from parent to child!');\n        document.getElementById('iframe').contentWindow.postMessage({\n          function: 'displayMessage',\n          args: {\n            messageText: outgoingMessageText\n          }\n        }, \"http://localhost:3000/\");\n      } else {\n        throw new Meteor.Error('iFrame not loaded yet!');\n      }\n    };\n\n    const writable_props = [];\n    Object.keys($$props).forEach(key => {\n      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<DisplayMessageForm> was created with unknown prop '\".concat(key, \"'\"));\n    });\n\n    function input_input_handler() {\n      outgoingMessageText = this.value;\n      $$invalidate(0, outgoingMessageText);\n    }\n\n    $$self.$capture_state = () => ({\n      iFrameLoaded,\n      handleSubmit,\n      outgoingMessageText\n    });\n\n    $$self.$inject_state = $$props => {\n      if ('outgoingMessageText' in $$props) $$invalidate(0, outgoingMessageText = $$props.outgoingMessageText);\n    };\n\n    if ($$props && \"$$inject\" in $$props) {\n      $$self.$inject_state($$props.$$inject);\n    }\n\n    $: $$invalidate(0, outgoingMessageText = \"\");\n\n    return [outgoingMessageText, handleSubmit, input_input_handler];\n  }\n\n  class DisplayMessageForm extends SvelteComponentDev {\n    constructor(options) {\n      super(options);\n      init(this, options, instance, create_fragment, safe_not_equal, {});\n      dispatch_dev(\"SvelteRegisterComponent\", {\n        component: this,\n        tagName: \"DisplayMessageForm\",\n        options,\n        id: create_fragment.name\n      });\n    }\n\n  }\n\n  if (module && module.hot) {\n    DisplayMessageForm = ___SVELTE_HMR_HOT_API.applyHmr({\n      m: module,\n      id: \"imports/ui/DisplayMessageForm.svelte\",\n      hotOptions: {\n        \"preserveLocalState\": false,\n        \"noPreserveStateKey\": [\"@hmr:reset\", \"@!hmr\"],\n        \"preserveAllLocalStateKey\": \"@hmr:keep-all\",\n        \"preserveLocalStateKey\": \"@hmr:keep\",\n        \"noReload\": false,\n        \"optimistic\": true,\n        \"acceptNamedExports\": true,\n        \"acceptAccessors\": true,\n        \"injectCss\": true,\n        \"cssEjectDelay\": 100,\n        \"native\": false,\n        \"importAdapterName\": \"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\",\n        \"noOverlay\": false\n      },\n      Component: DisplayMessageForm,\n      ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER,\n      acceptable: true,\n      preserveLocalState: false,\n      cssId: undefined,\n      nonCssHash: undefined,\n      ignoreCss: false\n    });\n  }\n\n  module1.exportDefault(DisplayMessageForm);\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Message.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/Message.svelte                                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let SvelteComponentDev, add_location, append_dev, component_subscribe, detach_dev, dispatch_dev, element, init, insert_dev, noop, safe_not_equal, set_data_dev, text, validate_slots, validate_store;\n  module1.link(\"svelte/internal\", {\n    SvelteComponentDev(v) {\n      SvelteComponentDev = v;\n    },\n\n    add_location(v) {\n      add_location = v;\n    },\n\n    append_dev(v) {\n      append_dev = v;\n    },\n\n    component_subscribe(v) {\n      component_subscribe = v;\n    },\n\n    detach_dev(v) {\n      detach_dev = v;\n    },\n\n    dispatch_dev(v) {\n      dispatch_dev = v;\n    },\n\n    element(v) {\n      element = v;\n    },\n\n    init(v) {\n      init = v;\n    },\n\n    insert_dev(v) {\n      insert_dev = v;\n    },\n\n    noop(v) {\n      noop = v;\n    },\n\n    safe_not_equal(v) {\n      safe_not_equal = v;\n    },\n\n    set_data_dev(v) {\n      set_data_dev = v;\n    },\n\n    text(v) {\n      text = v;\n    },\n\n    validate_slots(v) {\n      validate_slots = v;\n    },\n\n    validate_store(v) {\n      validate_store = v;\n    }\n\n  }, 0);\n  let incomingMessageText;\n  module1.link(\"/imports/api/stores\", {\n    incomingMessageText(v) {\n      incomingMessageText = v;\n    }\n\n  }, 1);\n\n  let ___SVELTE_HMR_HOT_API;\n\n  module1.link(\"meteor/zodern:melte/hmr-runtime.js\", {\n    \"*\"(v) {\n      ___SVELTE_HMR_HOT_API = v;\n    }\n\n  }, 2);\n\n  let ___SVELTE_HMR_HOT_API_PROXY_ADAPTER;\n\n  module1.link(\"meteor/zodern:melte/proxy-adapter.js\", {\n    adapter(v) {\n      ___SVELTE_HMR_HOT_API_PROXY_ADAPTER = v;\n    }\n\n  }, 3);\n  const file = \"imports/ui/Message.svelte\"; // (8:4) {:else}\n\n  function create_else_block(ctx) {\n    let h2;\n    let t0;\n    let t1;\n    const block = {\n      c: function create() {\n        h2 = element(\"h2\");\n        t0 = text(\"Message received from child: \");\n        t1 = text(\n        /*$incomingMessageText*/\n        ctx[0]);\n        add_location(h2, file, 8, 8, 185);\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, h2, anchor);\n        append_dev(h2, t0);\n        append_dev(h2, t1);\n      },\n      p: function update(ctx, dirty) {\n        if (dirty &\n        /*$incomingMessageText*/\n        1) set_data_dev(t1,\n        /*$incomingMessageText*/\n        ctx[0]);\n      },\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(h2);\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_else_block.name,\n      type: \"else\",\n      source: \"(8:4) {:else}\",\n      ctx\n    });\n    return block;\n  } // (6:4) {#if (!$incomingMessageText)}\n\n\n  function create_if_block(ctx) {\n    let h2;\n    const block = {\n      c: function create() {\n        h2 = element(\"h2\");\n        h2.textContent = \"Listening for messages...\";\n        add_location(h2, file, 6, 8, 130);\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, h2, anchor);\n      },\n      p: noop,\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(h2);\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_if_block.name,\n      type: \"if\",\n      source: \"(6:4) {#if (!$incomingMessageText)}\",\n      ctx\n    });\n    return block;\n  }\n\n  function create_fragment(ctx) {\n    let div;\n\n    function select_block_type(ctx, dirty) {\n      if (!\n      /*$incomingMessageText*/\n      ctx[0]) return create_if_block;\n      return create_else_block;\n    }\n\n    let current_block_type = select_block_type(ctx, -1);\n    let if_block = current_block_type(ctx);\n    const block = {\n      c: function create() {\n        div = element(\"div\");\n        if_block.c();\n        add_location(div, file, 4, 0, 82);\n      },\n      l: function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      },\n      m: function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        if_block.m(div, null);\n      },\n      p: function update(ctx, _ref) {\n        let [dirty] = _ref;\n\n        if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {\n          if_block.p(ctx, dirty);\n        } else {\n          if_block.d(1);\n          if_block = current_block_type(ctx);\n\n          if (if_block) {\n            if_block.c();\n            if_block.m(div, null);\n          }\n        }\n      },\n      i: noop,\n      o: noop,\n      d: function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        if_block.d();\n      }\n    };\n    dispatch_dev(\"SvelteRegisterBlock\", {\n      block,\n      id: create_fragment.name,\n      type: \"component\",\n      source: \"\",\n      ctx\n    });\n    return block;\n  }\n\n  function instance($$self, $$props, $$invalidate) {\n    let $incomingMessageText;\n    validate_store(incomingMessageText, 'incomingMessageText');\n    component_subscribe($$self, incomingMessageText, $$value => $$invalidate(0, $incomingMessageText = $$value));\n    let {\n      $$slots: slots = {},\n      $$scope\n    } = $$props;\n    validate_slots('Message', slots, []);\n    const writable_props = [];\n    Object.keys($$props).forEach(key => {\n      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(\"<Message> was created with unknown prop '\".concat(key, \"'\"));\n    });\n\n    $$self.$capture_state = () => ({\n      incomingMessageText,\n      $incomingMessageText\n    });\n\n    return [$incomingMessageText];\n  }\n\n  class Message extends SvelteComponentDev {\n    constructor(options) {\n      super(options);\n      init(this, options, instance, create_fragment, safe_not_equal, {});\n      dispatch_dev(\"SvelteRegisterComponent\", {\n        component: this,\n        tagName: \"Message\",\n        options,\n        id: create_fragment.name\n      });\n    }\n\n  }\n\n  if (module && module.hot) {\n    Message = ___SVELTE_HMR_HOT_API.applyHmr({\n      m: module,\n      id: \"imports/ui/Message.svelte\",\n      hotOptions: {\n        \"preserveLocalState\": false,\n        \"noPreserveStateKey\": [\"@hmr:reset\", \"@!hmr\"],\n        \"preserveAllLocalStateKey\": \"@hmr:keep-all\",\n        \"preserveLocalStateKey\": \"@hmr:keep\",\n        \"noReload\": false,\n        \"optimistic\": true,\n        \"acceptNamedExports\": true,\n        \"acceptAccessors\": true,\n        \"injectCss\": true,\n        \"cssEjectDelay\": 100,\n        \"native\": false,\n        \"importAdapterName\": \"___SVELTE_HMR_HOT_API_PROXY_ADAPTER\",\n        \"noOverlay\": false\n      },\n      Component: Message,\n      ProxyAdapter: ___SVELTE_HMR_HOT_API_PROXY_ADAPTER,\n      acceptable: true,\n      preserveLocalState: false,\n      cssId: undefined,\n      nonCssHash: undefined,\n      ignoreCss: false\n    });\n  }\n\n  module1.exportDefault(Message);\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/main.js                                                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet App;\nmodule.link(\"../imports/ui/App.svelte\", {\n  default(v) {\n    App = v;\n  }\n\n}, 1);\nMeteor.startup(() => {\n  new App({\n    target: document.getElementById('app')\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"public\":{\"constants.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// public/constants.js                                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({PARENT_URL:()=>PARENT_URL,CHILD_URL:()=>CHILD_URL},true);const PARENT_URL = \"http://localhost:5000\";\nconst CHILD_URL = \"http://localhost:3000\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".mjs\",\n    \".svelte\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"de5ddf8cbac6fabea119ddf5ad567b1eda6920df","servePath":"/app.js","sourceMap":{"version":3,"sources":["ChildToParentAPI.svelte","imports/api/stores.js","client/main.js"],"names":["writable","iFrameLoaded","incomingMessageText","count","Meteor","target","document"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAgB0B;;WAExB,mEAAW,YAFa;;;;;;;;;;;;;;;;;4BAXH;;aAErB,CAAQ,gFAFa;;iBAKV,qBAAgB,UAAa;2BACtC;;;;;;AAiBF;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BF,cAASA;AAAT,cAAyB,QAAzB,YAASA;AAAT,gDAASA;AAAT;AAASA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEO,MAAMC,YAAY,GAAGD,QAAQ,CAA7B,KAA6B,CAA7B;AACA,MAAME,mBAAmB,GAAGF,QAAQ,CAApC,EAAoC,CAApC;AACA,MAAMG,KAAK,GAAGH,QAAQ,CAAtB,CAAsB,CAAte,MAAM;AACnB,UAAQ;AACNC,UAAM,EAAEC,QAAQ,CAARA;AADF,GAAR;AADFF,G","file":"/app.js","sourcesContent":["<script>\nimport { PARENT_URL, CHILD_URL } from \"/public/constants\";\nimport { incomingMessageText, count } from \"/imports/api/stores\";\n\n//function that displays message, takes in a \"messageText\" argument\nfunction displayMessage(args) {\n  //sanity check\n  console.log(`displayMessage function triggered on parent with args ${args}!`);\n\n  //check messageText is string\n  if (typeof args.messageText === \"string\") {\n    incomingMessageText.set(args.messageText);\n  }\n}\n\n//function that alerts message, takes in a \"messageText\" argument\nfunction alertMessage(args) {\n  //sanity check\n  console.log(`alertMessage function triggered on parent with args ${args}!`);\n\n  //check args and alert\n  if (typeof args.messageText === \"string\") {\n    alert(args.messageText);\n  }\n}\n\n//function that increments count\nconst incrementCount = () => {\n  console.log(\"incrementCount function triggered on parent!\");\n  console.log($count);\n  count.set($count + 1);\n};\n\n//function that decrements count\nconst decrementCount = () => {\n  console.log(\"decrementCount function triggered on parent!\");\n  count.set($count - 1);\n};\n\n//message handler\nwindow.addEventListener(\"message\", function (message) {\n  //function adapter\n  const functionAdapter = {\n    displayMessage,\n    alertMessage,\n    incrementCount,\n    decrementCount,\n  };\n\n  if (message.origin === CHILD_URL) {\n    //sanity check\n    console.log(\"incoming message in parent MessageHandler from child!\");\n    console.log(message);\n\n    //parse input\n    functionName = message.data.function;\n    args = message.data.args;\n\n    //call appropriate function\n    if (functionAdapter[functionName]) {\n      functionAdapter[functionName](args);\n    } else {\n      throw new Error(\"invalid function name\");\n    }\n  } else if (message.origin === PARENT_URL) {\n    //sanity check\n    console.log(\"incoming message in parent MessageHandler from own URL\");\n  } else {\n    //permission denied\n    throw new Error(\"invalid parent URL, permission denied\");\n  }\n});\n</script>\n","import { writable } from \"svelte/store\";\n\nexport const iFrameLoaded = writable(false);\nexport const incomingMessageText = writable(\"\");\nexport const count = writable(0);\n","import { Meteor } from 'meteor/meteor';\nimport App from '../imports/ui/App.svelte';\n\n\nMeteor.startup(() => {\n  new App({\n    target: document.getElementById('app')\n  });\n});"]}}]