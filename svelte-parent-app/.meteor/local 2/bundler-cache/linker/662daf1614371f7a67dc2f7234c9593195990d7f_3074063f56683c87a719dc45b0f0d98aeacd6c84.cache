[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"zodern:melte\":{\"tracker.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// packages/zodern_melte/tracker.js                                                //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\n!function (module1) {\n  const {\n    onDestroy\n  } = require('svelte');\n\n  const {\n    Tracker\n  } = require('meteor/tracker');\n\n  module.exports = {\n    createReactiveWrapper() {\n      let computation = null;\n      onDestroy(() => {\n        if (computation) {\n          computation.stop();\n        }\n      });\n      return function (func) {\n        if (computation) {\n          computation.stop();\n        }\n\n        computation = Tracker.autorun(func);\n        return computation;\n      };\n    }\n\n  };\n}.call(this, module);\n/////////////////////////////////////////////////////////////////////////////////////\n\n},\"hmr-runtime.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// packages/zodern_melte/hmr-runtime.js                                            //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\n!function (module1) {\n  let _objectSpread;\n\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n\n  }, 0);\n\n  const {\n    makeApplyHmr\n  } = require('meteor/zodern:melte-compiler/hmr-runtime.js');\n\n  module.exports.applyHmr = makeApplyHmr(args => {\n    var _args$m$hot$data;\n\n    // Mark this file as reloadable\n    args.m.hot.accept();\n    let acceptCallback = null;\n\n    if ((_args$m$hot$data = args.m.hot.data) !== null && _args$m$hot$data !== void 0 && _args$m$hot$data.acceptCallback) {\n      // svelte-hmr expects accept to work as with nollup or vite\n      // applying changes is done synchronously, so we wait until after it is done\n      setTimeout(() => args.m.hot.data.acceptCallback(), 10);\n    }\n\n    args.m.hot.dispose(data => {\n      if (acceptCallback) {\n        data.acceptCallback = acceptCallback;\n      }\n    });\n    return Object.assign({}, args, {\n      hot: _objectSpread(_objectSpread({}, args.m.hot), {}, {\n        accept(cb) {\n          acceptCallback = cb;\n        }\n\n      }),\n      hotOptions: _objectSpread(_objectSpread({}, args.hotOptions || {}), {}, {\n        noOverlay: true\n      }),\n\n      reload() {\n        if (Package && Package.reload) {\n          Package.reload.Reload._reload({\n            immediateMigration: true\n          });\n        } else {\n          window.location.reload();\n        }\n      }\n\n    });\n  });\n}.call(this, module);\n/////////////////////////////////////////////////////////////////////////////////////\n\n},\"proxy-adapter.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// packages/zodern_melte/proxy-adapter.js                                          //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\n!function (module1) {\n  if (process.env.NODE_ENV === \"development\") {\n    const {\n      proxyAdapter\n    } = require('meteor/zodern:melte-compiler/hmr-runtime.js');\n\n    module.exports = proxyAdapter;\n  }\n}.call(this, module);\n/////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/zodern:melte/tracker.js\");\n\n/* Exports */\nPackage._define(\"zodern:melte\");\n\n})();\n","servePath":"/packages/zodern_melte.js","sourceMap":{"version":3,"sources":["packages/zodern:melte/tracker.js","packages/zodern:melte/hmr-runtime.js","packages/zodern:melte/proxy-adapter.js"],"names":["onDestroy","require","Tracker","module","exports","createReactiveWrapper","computation","stop","func","autorun","_objectSpread","module1","link","default","v","makeApplyHmr","applyHmr","args","m","hot","accept","acceptCallback","data","setTimeout","dispose","Object","assign","cb","hotOptions","noOverlay","reload","Package","Reload","_reload","immediateMigration","window","location","process","env","NODE_ENV","proxyAdapter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAM;AAAEA;AAAF,MAAgBC,OAAO,CAAC,QAAD,CAA7B;;AACA,QAAM;AAAEC;AAAF,MAAcD,OAAO,CAAC,gBAAD,CAA3B;;AAEAE,QAAM,CAACC,OAAP,GAAiB;AACfC,yBAAqB,GAAG;AACtB,UAAIC,WAAW,GAAG,IAAlB;AAEAN,eAAS,CAAC,MAAM;AACd,YAAIM,WAAJ,EAAiB;AACfA,qBAAW,CAACC,IAAZ;AACD;AACF,OAJQ,CAAT;AAMA,aAAO,UAAUC,IAAV,EAAgB;AACrB,YAAIF,WAAJ,EAAiB;AACfA,qBAAW,CAACC,IAAZ;AACD;;AAEDD,mBAAW,GAAGJ,OAAO,CAACO,OAAR,CAAgBD,IAAhB,CAAd;AAEA,eAAOF,WAAP;AACD,OARD;AASD;;AAnBc,GAAjB;;;;;;;;;;;;;ACHA,MAAII,aAAJ;;AAAkBC,SAAO,CAACC,IAAR,CAAa,sCAAb,EAAoD;AAACC,WAAO,CAACC,CAAD,EAAG;AAACJ,mBAAa,GAACI,CAAd;AAAgB;;AAA5B,GAApD,EAAkF,CAAlF;;AAAlB,QAAM;AAAEC;AAAF,MAAmBd,OAAO,CAAC,6CAAD,CAAhC;;AAEAE,QAAM,CAACC,OAAP,CAAeY,QAAf,GAA0BD,YAAY,CAACE,IAAI,IAAI;AAAA;;AAC7C;AACAA,QAAI,CAACC,CAAL,CAAOC,GAAP,CAAWC,MAAX;AAEA,QAAIC,cAAc,GAAG,IAArB;;AACA,4BAAIJ,IAAI,CAACC,CAAL,CAAOC,GAAP,CAAWG,IAAf,6CAAI,iBAAiBD,cAArB,EAAqC;AACnC;AACA;AACAE,gBAAU,CAAC,MAAMN,IAAI,CAACC,CAAL,CAAOC,GAAP,CAAWG,IAAX,CAAgBD,cAAhB,EAAP,EAAyC,EAAzC,CAAV;AACD;;AAEDJ,QAAI,CAACC,CAAL,CAAOC,GAAP,CAAWK,OAAX,CAAoBF,IAAD,IAAU;AAC3B,UAAID,cAAJ,EAAoB;AAClBC,YAAI,CAACD,cAAL,GAAsBA,cAAtB;AACD;AACF,KAJD;AAMA,WAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,IAAlB,EAAwB;AAC7BE,SAAG,kCACEF,IAAI,CAACC,CAAL,CAAOC,GADT;AAEDC,cAAM,CAACO,EAAD,EAAK;AACTN,wBAAc,GAAGM,EAAjB;AACD;;AAJA,QAD0B;AAO7BC,gBAAU,kCACJX,IAAI,CAACW,UAAL,IAAmB,EADf;AAERC,iBAAS,EAAE;AAFH,QAPmB;;AAW7BC,YAAM,GAAG;AACP,YAAIC,OAAO,IAAIA,OAAO,CAACD,MAAvB,EAA+B;AAC7BC,iBAAO,CAACD,MAAR,CAAeE,MAAf,CAAsBC,OAAtB,CAA8B;AAAEC,8BAAkB,EAAE;AAAtB,WAA9B;AACD,SAFD,MAEO;AACLC,gBAAM,CAACC,QAAP,CAAgBN,MAAhB;AACD;AACF;;AAjB4B,KAAxB,CAAP;AAmBD,GApCqC,CAAtC;;;;;;;;;;;;;ACFA,MAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,UAAM;AAAEC;AAAF,QAAmBvC,OAAO,CAAC,6CAAD,CAAhC;;AAEAE,UAAM,CAACC,OAAP,GAAiBoC,YAAjB;AACD","file":"/packages/zodern_melte.js","sourcesContent":["const { onDestroy } = require('svelte');\nconst { Tracker } = require('meteor/tracker');\n\nmodule.exports = {\n  createReactiveWrapper() {\n    let computation = null;\n\n    onDestroy(() => {\n      if (computation) {\n        computation.stop();\n      }\n    });\n\n    return function (func) {\n      if (computation) {\n        computation.stop();\n      }\n\n      computation = Tracker.autorun(func);\n\n      return computation;\n    }\n  }\n}\n","const { makeApplyHmr } = require('meteor/zodern:melte-compiler/hmr-runtime.js');\n\nmodule.exports.applyHmr = makeApplyHmr(args => {\n  // Mark this file as reloadable\n  args.m.hot.accept();\n\n  let acceptCallback = null;\n  if (args.m.hot.data?.acceptCallback) {\n    // svelte-hmr expects accept to work as with nollup or vite\n    // applying changes is done synchronously, so we wait until after it is done\n    setTimeout(() => args.m.hot.data.acceptCallback(), 10);\n  }\n\n  args.m.hot.dispose((data) => {\n    if (acceptCallback) {\n      data.acceptCallback = acceptCallback;\n    }\n  });\n\n  return Object.assign({}, args, {\n    hot: {\n      ...args.m.hot,\n      accept(cb) {\n        acceptCallback = cb;\n      }\n    },\n    hotOptions: {\n      ...(args.hotOptions || {}),\n      noOverlay: true\n    },\n    reload() {\n      if (Package && Package.reload) {\n        Package.reload.Reload._reload({ immediateMigration: true });\n      } else {\n        window.location.reload();\n      }\n    }\n  });\n});\n","if (process.env.NODE_ENV === \"development\") {\n  const { proxyAdapter } = require('meteor/zodern:melte-compiler/hmr-runtime.js');\n\n  module.exports = proxyAdapter;\n}\n"]}}]