[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package.modules.meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"AlertMessageForm.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/AlertMessageForm.svelte                                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nvar SvelteComponentDev, add_location, append_dev, attr_dev, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, noop, prevent_default, run_all, safe_not_equal, set_input_value, space, validate_slots;\nmodule.link(\"svelte/internal\", {\n  SvelteComponentDev: function (v) {\n    SvelteComponentDev = v;\n  },\n  add_location: function (v) {\n    add_location = v;\n  },\n  append_dev: function (v) {\n    append_dev = v;\n  },\n  attr_dev: function (v) {\n    attr_dev = v;\n  },\n  detach_dev: function (v) {\n    detach_dev = v;\n  },\n  dispatch_dev: function (v) {\n    dispatch_dev = v;\n  },\n  element: function (v) {\n    element = v;\n  },\n  globals: function (v) {\n    globals = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  insert_dev: function (v) {\n    insert_dev = v;\n  },\n  listen_dev: function (v) {\n    listen_dev = v;\n  },\n  noop: function (v) {\n    noop = v;\n  },\n  prevent_default: function (v) {\n    prevent_default = v;\n  },\n  run_all: function (v) {\n    run_all = v;\n  },\n  safe_not_equal: function (v) {\n    safe_not_equal = v;\n  },\n  set_input_value: function (v) {\n    set_input_value = v;\n  },\n  space: function (v) {\n    space = v;\n  },\n  validate_slots: function (v) {\n    validate_slots = v;\n  }\n}, 0);\nvar iFrameLoaded;\nmodule.link(\"./stores\", {\n  iFrameLoaded: function (v) {\n    iFrameLoaded = v;\n  }\n}, 1);\nvar _globals = globals,\n    console_1 = _globals.console;\nvar file = \"imports/ui/AlertMessageForm.svelte\";\n\nfunction create_fragment(ctx) {\n  var div;\n  var form;\n  var label;\n  var t1;\n  var br;\n  var t2;\n  var input;\n  var t3;\n  var button;\n  var mounted;\n  var dispose;\n  var block = {\n    c: function () {\n      function create() {\n        div = element(\"div\");\n        form = element(\"form\");\n        label = element(\"label\");\n        label.textContent = \"Send a message to alert on the child app:\";\n        t1 = space();\n        br = element(\"br\");\n        t2 = space();\n        input = element(\"input\");\n        t3 = space();\n        button = element(\"button\");\n        button.textContent = \"Send Message\";\n        attr_dev(label, \"for\", \"html\");\n        add_location(label, file, 20, 8, 658);\n        add_location(br, file, 21, 8, 735);\n        attr_dev(input, \"type\", \"text\");\n        attr_dev(input, \"name\", \"text\");\n        attr_dev(input, \"placeholder\", \"Type message to send\");\n        add_location(input, file, 22, 8, 750);\n        attr_dev(button, \"type\", \"submit\");\n        add_location(button, file, 23, 8, 859);\n        add_location(form, file, 19, 4, 603);\n        add_location(div, file, 18, 0, 593);\n      }\n\n      return create;\n    }(),\n    l: function () {\n      function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      }\n\n      return claim;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, form);\n        append_dev(form, label);\n        append_dev(form, t1);\n        append_dev(form, br);\n        append_dev(form, t2);\n        append_dev(form, input);\n        set_input_value(input,\n        /*outgoingMessageText*/\n        ctx[0]);\n        append_dev(form, t3);\n        append_dev(form, button);\n\n        if (!mounted) {\n          dispose = [listen_dev(input, \"input\",\n          /*input_input_handler*/\n          ctx[2]), listen_dev(form, \"submit\", prevent_default(\n          /*handleSubmit*/\n          ctx[1]), false, true, false)];\n          mounted = true;\n        }\n      }\n\n      return mount;\n    }(),\n    p: function () {\n      function update(ctx, _ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            dirty = _ref2[0];\n\n        if (dirty &\n        /*outgoingMessageText*/\n        1 && input.value !==\n        /*outgoingMessageText*/\n        ctx[0]) {\n          set_input_value(input,\n          /*outgoingMessageText*/\n          ctx[0]);\n        }\n      }\n\n      return update;\n    }(),\n    i: noop,\n    o: noop,\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var outgoingMessageText;\n  var _$$props$$$slots = $$props.$$slots,\n      slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n  validate_slots('AlertMessageForm', slots, []);\n\n  var handleSubmit = function () {\n    //check that iFrame has loaded before accessing it and sending message\n    if (iFrameLoaded) {\n      console.log('Sending message to display from parent to child!');\n      document.getElementById('iframe').contentWindow.postMessage({\n        \"function\": 'alertMessage',\n        args: {\n          messageText: outgoingMessageText\n        }\n      }, \"http://localhost:3000/\");\n    } else {\n      console.log('iFrame not loaded yet!');\n    }\n  };\n\n  var writable_props = [];\n  Object.keys($$props).forEach(function (key) {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<AlertMessageForm> was created with unknown prop '\" + key + \"'\");\n  });\n\n  function input_input_handler() {\n    outgoingMessageText = this.value;\n    $$invalidate(0, outgoingMessageText);\n  }\n\n  $$self.$capture_state = function () {\n    return {\n      iFrameLoaded: iFrameLoaded,\n      handleSubmit: handleSubmit,\n      outgoingMessageText: outgoingMessageText\n    };\n  };\n\n  $$self.$inject_state = function ($$props) {\n    if ('outgoingMessageText' in $$props) $$invalidate(0, outgoingMessageText = $$props.outgoingMessageText);\n  };\n\n  if ($$props && \"$$inject\" in $$props) {\n    $$self.$inject_state($$props.$$inject);\n  }\n\n  $: $$invalidate(0, outgoingMessageText = \"\");\n\n  return [outgoingMessageText, handleSubmit, input_input_handler];\n}\n\nvar AlertMessageForm = /*#__PURE__*/function (_SvelteComponentDev) {\n  _inheritsLoose(AlertMessageForm, _SvelteComponentDev);\n\n  function AlertMessageForm(options) {\n    var _this;\n\n    _this = _SvelteComponentDev.call(this, options) || this;\n    init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {});\n    dispatch_dev(\"SvelteRegisterComponent\", {\n      component: _assertThisInitialized(_this),\n      tagName: \"AlertMessageForm\",\n      options: options,\n      id: create_fragment.name\n    });\n    return _this;\n  }\n\n  return AlertMessageForm;\n}(SvelteComponentDev);\n\nmodule.exportDefault(AlertMessageForm);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/App.svelte                                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nvar SvelteComponentDev, add_location, append_dev, attr_dev, create_component, destroy_component, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, mount_component, noop, safe_not_equal, set_data_dev, space, src_url_equal, text, transition_in, transition_out, validate_slots;\nmodule.link(\"svelte/internal\", {\n  SvelteComponentDev: function (v) {\n    SvelteComponentDev = v;\n  },\n  add_location: function (v) {\n    add_location = v;\n  },\n  append_dev: function (v) {\n    append_dev = v;\n  },\n  attr_dev: function (v) {\n    attr_dev = v;\n  },\n  create_component: function (v) {\n    create_component = v;\n  },\n  destroy_component: function (v) {\n    destroy_component = v;\n  },\n  detach_dev: function (v) {\n    detach_dev = v;\n  },\n  dispatch_dev: function (v) {\n    dispatch_dev = v;\n  },\n  element: function (v) {\n    element = v;\n  },\n  globals: function (v) {\n    globals = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  insert_dev: function (v) {\n    insert_dev = v;\n  },\n  listen_dev: function (v) {\n    listen_dev = v;\n  },\n  mount_component: function (v) {\n    mount_component = v;\n  },\n  noop: function (v) {\n    noop = v;\n  },\n  safe_not_equal: function (v) {\n    safe_not_equal = v;\n  },\n  set_data_dev: function (v) {\n    set_data_dev = v;\n  },\n  space: function (v) {\n    space = v;\n  },\n  src_url_equal: function (v) {\n    src_url_equal = v;\n  },\n  text: function (v) {\n    text = v;\n  },\n  transition_in: function (v) {\n    transition_in = v;\n  },\n  transition_out: function (v) {\n    transition_out = v;\n  },\n  validate_slots: function (v) {\n    validate_slots = v;\n  }\n}, 0);\nvar DisplayMessageForm;\nmodule.link(\"./DisplayMessageForm\", {\n  \"default\": function (v) {\n    DisplayMessageForm = v;\n  }\n}, 1);\nvar AlertMessageForm;\nmodule.link(\"./AlertMessageForm\", {\n  \"default\": function (v) {\n    AlertMessageForm = v;\n  }\n}, 2);\nvar Counter;\nmodule.link(\"./Counter\", {\n  \"default\": function (v) {\n    Counter = v;\n  }\n}, 3);\nvar iFrameLoaded;\nmodule.link(\"./stores\", {\n  iFrameLoaded: function (v) {\n    iFrameLoaded = v;\n  }\n}, 4);\nvar _globals = globals,\n    console_1 = _globals.console;\nvar file = \"imports/ui/App.svelte\"; // (35:2) {:else}\n\nfunction create_else_block(ctx) {\n  var h2;\n  var t0;\n  var t1;\n  var block = {\n    c: function () {\n      function create() {\n        h2 = element(\"h2\");\n        t0 = text(\"Message received: \");\n        t1 = text(\n        /*incomingMessageText*/\n        ctx[0]);\n        add_location(h2, file, 35, 4, 930);\n      }\n\n      return create;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, h2, anchor);\n        append_dev(h2, t0);\n        append_dev(h2, t1);\n      }\n\n      return mount;\n    }(),\n    p: function () {\n      function update(ctx, dirty) {\n        if (dirty &\n        /*incomingMessageText*/\n        1) set_data_dev(t1,\n        /*incomingMessageText*/\n        ctx[0]);\n      }\n\n      return update;\n    }(),\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(h2);\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_else_block.name,\n    type: \"else\",\n    source: \"(35:2) {:else}\",\n    ctx: ctx\n  });\n  return block;\n} // (33:2) {#if (!incomingMessageText)}\n\n\nfunction create_if_block(ctx) {\n  var h2;\n  var block = {\n    c: function () {\n      function create() {\n        h2 = element(\"h2\");\n        h2.textContent = \"Listening for messages...\";\n        add_location(h2, file, 33, 4, 881);\n      }\n\n      return create;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, h2, anchor);\n      }\n\n      return mount;\n    }(),\n    p: noop,\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(h2);\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_if_block.name,\n    type: \"if\",\n    source: \"(33:2) {#if (!incomingMessageText)}\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction create_fragment(ctx) {\n  var div;\n  var h1;\n  var t1;\n  var t2;\n  var displaymessageform;\n  var t3;\n  var alertmessageform;\n  var t4;\n  var counter;\n  var t5;\n  var iframe;\n  var iframe_src_value;\n  var current;\n  var mounted;\n  var dispose;\n\n  function select_block_type(ctx, dirty) {\n    if (!\n    /*incomingMessageText*/\n    ctx[0]) return create_if_block;\n    return create_else_block;\n  }\n\n  var current_block_type = select_block_type(ctx, -1);\n  var if_block = current_block_type(ctx);\n  displaymessageform = new DisplayMessageForm({\n    $$inline: true\n  });\n  alertmessageform = new AlertMessageForm({\n    $$inline: true\n  });\n  counter = new Counter({\n    $$inline: true\n  });\n  var block = {\n    c: function () {\n      function create() {\n        div = element(\"div\");\n        h1 = element(\"h1\");\n        h1.textContent = \"Svelte Parent App\";\n        t1 = space();\n        if_block.c();\n        t2 = space();\n        create_component(displaymessageform.$$.fragment);\n        t3 = space();\n        create_component(alertmessageform.$$.fragment);\n        t4 = space();\n        create_component(counter.$$.fragment);\n        t5 = space();\n        iframe = element(\"iframe\");\n        add_location(h1, file, 31, 2, 819);\n        attr_dev(iframe, \"id\", \"iframe\");\n        attr_dev(iframe, \"title\", \"react-child-app\");\n        if (!src_url_equal(iframe.src, iframe_src_value = \"http://localhost:3000/\")) attr_dev(iframe, \"src\", iframe_src_value);\n        attr_dev(iframe, \"sandbox\", \"allow-same-origin allow-scripts allow-forms allow-top-navigation allow-modals\");\n        add_location(iframe, file, 42, 2, 1053);\n        attr_dev(div, \"class\", \"container\");\n        add_location(div, file, 30, 0, 793);\n      }\n\n      return create;\n    }(),\n    l: function () {\n      function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      }\n\n      return claim;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, h1);\n        append_dev(div, t1);\n        if_block.m(div, null);\n        append_dev(div, t2);\n        mount_component(displaymessageform, div, null);\n        append_dev(div, t3);\n        mount_component(alertmessageform, div, null);\n        append_dev(div, t4);\n        mount_component(counter, div, null);\n        append_dev(div, t5);\n        append_dev(div, iframe);\n        current = true;\n\n        if (!mounted) {\n          dispose = listen_dev(iframe, \"load\",\n          /*oniFrameLoad*/\n          ctx[1], false, false, false);\n          mounted = true;\n        }\n      }\n\n      return mount;\n    }(),\n    p: function () {\n      function update(ctx, _ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            dirty = _ref2[0];\n\n        if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {\n          if_block.p(ctx, dirty);\n        } else {\n          if_block.d(1);\n          if_block = current_block_type(ctx);\n\n          if (if_block) {\n            if_block.c();\n            if_block.m(div, t2);\n          }\n        }\n      }\n\n      return update;\n    }(),\n    i: function () {\n      function intro(local) {\n        if (current) return;\n        transition_in(displaymessageform.$$.fragment, local);\n        transition_in(alertmessageform.$$.fragment, local);\n        transition_in(counter.$$.fragment, local);\n        current = true;\n      }\n\n      return intro;\n    }(),\n    o: function () {\n      function outro(local) {\n        transition_out(displaymessageform.$$.fragment, local);\n        transition_out(alertmessageform.$$.fragment, local);\n        transition_out(counter.$$.fragment, local);\n        current = false;\n      }\n\n      return outro;\n    }(),\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        if_block.d();\n        destroy_component(displaymessageform);\n        destroy_component(alertmessageform);\n        destroy_component(counter);\n        mounted = false;\n        dispose();\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var incomingMessageText;\n  var _$$props$$$slots = $$props.$$slots,\n      slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n  validate_slots('App', slots, []);\n\n  var oniFrameLoad = function () {\n    iFrameLoaded.set(true);\n\n    if (iFrameLoaded) {\n      console.log('child iFrame loaded, logging from parent!');\n    }\n  }; //event listener to receive messages from child and update message text\n\n\n  window.addEventListener(\"message\", function (message) {\n    if (message.origin === \"http://localhost:3000\") {\n      console.log(\"incoming messsage in parent from child!\");\n      console.log(message);\n      $$invalidate(0, incomingMessageText = message.data);\n    }\n  });\n  var writable_props = [];\n  Object.keys($$props).forEach(function (key) {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<App> was created with unknown prop '\" + key + \"'\");\n  });\n\n  $$self.$capture_state = function () {\n    return {\n      DisplayMessageForm: DisplayMessageForm,\n      AlertMessageForm: AlertMessageForm,\n      Counter: Counter,\n      iFrameLoaded: iFrameLoaded,\n      oniFrameLoad: oniFrameLoad,\n      incomingMessageText: incomingMessageText\n    };\n  };\n\n  $$self.$inject_state = function ($$props) {\n    if ('incomingMessageText' in $$props) $$invalidate(0, incomingMessageText = $$props.incomingMessageText);\n  };\n\n  if ($$props && \"$$inject\" in $$props) {\n    $$self.$inject_state($$props.$$inject);\n  }\n\n  $: $$invalidate(0, incomingMessageText = \"\");\n\n  return [incomingMessageText, oniFrameLoad];\n}\n\nvar App = /*#__PURE__*/function (_SvelteComponentDev) {\n  _inheritsLoose(App, _SvelteComponentDev);\n\n  function App(options) {\n    var _this;\n\n    _this = _SvelteComponentDev.call(this, options) || this;\n    init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {});\n    dispatch_dev(\"SvelteRegisterComponent\", {\n      component: _assertThisInitialized(_this),\n      tagName: \"App\",\n      options: options,\n      id: create_fragment.name\n    });\n    return _this;\n  }\n\n  return App;\n}(SvelteComponentDev);\n\nmodule.exportDefault(App);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Counter.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/Counter.svelte                                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nvar SvelteComponentDev, add_location, append_dev, detach_dev, dispatch_dev, element, init, insert_dev, listen_dev, noop, run_all, safe_not_equal, space, validate_slots;\nmodule.link(\"svelte/internal\", {\n  SvelteComponentDev: function (v) {\n    SvelteComponentDev = v;\n  },\n  add_location: function (v) {\n    add_location = v;\n  },\n  append_dev: function (v) {\n    append_dev = v;\n  },\n  detach_dev: function (v) {\n    detach_dev = v;\n  },\n  dispatch_dev: function (v) {\n    dispatch_dev = v;\n  },\n  element: function (v) {\n    element = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  insert_dev: function (v) {\n    insert_dev = v;\n  },\n  listen_dev: function (v) {\n    listen_dev = v;\n  },\n  noop: function (v) {\n    noop = v;\n  },\n  run_all: function (v) {\n    run_all = v;\n  },\n  safe_not_equal: function (v) {\n    safe_not_equal = v;\n  },\n  space: function (v) {\n    space = v;\n  },\n  validate_slots: function (v) {\n    validate_slots = v;\n  }\n}, 0);\nvar count;\nmodule.link(\"./stores\", {\n  count: function (v) {\n    count = v;\n  }\n}, 1);\nvar file = \"imports/ui/Counter.svelte\";\n\nfunction create_fragment(ctx) {\n  var div;\n  var h2;\n  var t1;\n  var button0;\n  var t3;\n  var button1;\n  var mounted;\n  var dispose;\n  var block = {\n    c: function () {\n      function create() {\n        div = element(\"div\");\n        h2 = element(\"h2\");\n        h2.textContent = \"Change count on child\";\n        t1 = space();\n        button0 = element(\"button\");\n        button0.textContent = \"+\";\n        t3 = space();\n        button1 = element(\"button\");\n        button1.textContent = \"-\";\n        add_location(h2, file, 14, 4, 206);\n        add_location(button0, file, 15, 4, 241);\n        add_location(button1, file, 16, 4, 285);\n        add_location(div, file, 13, 0, 196);\n      }\n\n      return create;\n    }(),\n    l: function () {\n      function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      }\n\n      return claim;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, h2);\n        append_dev(div, t1);\n        append_dev(div, button0);\n        append_dev(div, t3);\n        append_dev(div, button1);\n\n        if (!mounted) {\n          dispose = [listen_dev(button0, \"click\",\n          /*increment*/\n          ctx[0], false, false, false), listen_dev(button1, \"click\",\n          /*decrement*/\n          ctx[1], false, false, false)];\n          mounted = true;\n        }\n      }\n\n      return mount;\n    }(),\n    p: noop,\n    i: noop,\n    o: noop,\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var _$$props$$$slots = $$props.$$slots,\n      slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n  validate_slots('Counter', slots, []);\n\n  var increment = function () {\n    count.update(function (n) {\n      return n++;\n    });\n  };\n\n  var decrement = function () {\n    count.update(function (n) {\n      return n--;\n    });\n  };\n\n  var writable_props = [];\n  Object.keys($$props).forEach(function (key) {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(\"<Counter> was created with unknown prop '\" + key + \"'\");\n  });\n\n  $$self.$capture_state = function () {\n    return {\n      count: count,\n      increment: increment,\n      decrement: decrement\n    };\n  };\n\n  return [increment, decrement];\n}\n\nvar Counter = /*#__PURE__*/function (_SvelteComponentDev) {\n  _inheritsLoose(Counter, _SvelteComponentDev);\n\n  function Counter(options) {\n    var _this;\n\n    _this = _SvelteComponentDev.call(this, options) || this;\n    init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {});\n    dispatch_dev(\"SvelteRegisterComponent\", {\n      component: _assertThisInitialized(_this),\n      tagName: \"Counter\",\n      options: options,\n      id: create_fragment.name\n    });\n    return _this;\n  }\n\n  return Counter;\n}(SvelteComponentDev);\n\nmodule.exportDefault(Counter);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"DisplayMessageForm.svelte\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/DisplayMessageForm.svelte                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nvar SvelteComponentDev, add_location, append_dev, attr_dev, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, noop, prevent_default, run_all, safe_not_equal, set_input_value, space, validate_slots;\nmodule.link(\"svelte/internal\", {\n  SvelteComponentDev: function (v) {\n    SvelteComponentDev = v;\n  },\n  add_location: function (v) {\n    add_location = v;\n  },\n  append_dev: function (v) {\n    append_dev = v;\n  },\n  attr_dev: function (v) {\n    attr_dev = v;\n  },\n  detach_dev: function (v) {\n    detach_dev = v;\n  },\n  dispatch_dev: function (v) {\n    dispatch_dev = v;\n  },\n  element: function (v) {\n    element = v;\n  },\n  globals: function (v) {\n    globals = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  insert_dev: function (v) {\n    insert_dev = v;\n  },\n  listen_dev: function (v) {\n    listen_dev = v;\n  },\n  noop: function (v) {\n    noop = v;\n  },\n  prevent_default: function (v) {\n    prevent_default = v;\n  },\n  run_all: function (v) {\n    run_all = v;\n  },\n  safe_not_equal: function (v) {\n    safe_not_equal = v;\n  },\n  set_input_value: function (v) {\n    set_input_value = v;\n  },\n  space: function (v) {\n    space = v;\n  },\n  validate_slots: function (v) {\n    validate_slots = v;\n  }\n}, 0);\nvar iFrameLoaded;\nmodule.link(\"./stores\", {\n  iFrameLoaded: function (v) {\n    iFrameLoaded = v;\n  }\n}, 1);\nvar _globals = globals,\n    console_1 = _globals.console;\nvar file = \"imports/ui/DisplayMessageForm.svelte\";\n\nfunction create_fragment(ctx) {\n  var div;\n  var form;\n  var label;\n  var t1;\n  var br;\n  var t2;\n  var input;\n  var t3;\n  var button;\n  var mounted;\n  var dispose;\n  var block = {\n    c: function () {\n      function create() {\n        div = element(\"div\");\n        form = element(\"form\");\n        label = element(\"label\");\n        label.textContent = \"Send a message to display on the child app:\";\n        t1 = space();\n        br = element(\"br\");\n        t2 = space();\n        input = element(\"input\");\n        t3 = space();\n        button = element(\"button\");\n        button.textContent = \"Send Message\";\n        attr_dev(label, \"for\", \"html\");\n        add_location(label, file, 20, 8, 660);\n        add_location(br, file, 21, 8, 739);\n        attr_dev(input, \"type\", \"text\");\n        attr_dev(input, \"name\", \"text\");\n        attr_dev(input, \"placeholder\", \"Type message to send\");\n        add_location(input, file, 22, 8, 754);\n        attr_dev(button, \"type\", \"submit\");\n        add_location(button, file, 23, 8, 863);\n        add_location(form, file, 19, 4, 605);\n        add_location(div, file, 18, 0, 595);\n      }\n\n      return create;\n    }(),\n    l: function () {\n      function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      }\n\n      return claim;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, form);\n        append_dev(form, label);\n        append_dev(form, t1);\n        append_dev(form, br);\n        append_dev(form, t2);\n        append_dev(form, input);\n        set_input_value(input,\n        /*outgoingMessageText*/\n        ctx[0]);\n        append_dev(form, t3);\n        append_dev(form, button);\n\n        if (!mounted) {\n          dispose = [listen_dev(input, \"input\",\n          /*input_input_handler*/\n          ctx[2]), listen_dev(form, \"submit\", prevent_default(\n          /*handleSubmit*/\n          ctx[1]), false, true, false)];\n          mounted = true;\n        }\n      }\n\n      return mount;\n    }(),\n    p: function () {\n      function update(ctx, _ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            dirty = _ref2[0];\n\n        if (dirty &\n        /*outgoingMessageText*/\n        1 && input.value !==\n        /*outgoingMessageText*/\n        ctx[0]) {\n          set_input_value(input,\n          /*outgoingMessageText*/\n          ctx[0]);\n        }\n      }\n\n      return update;\n    }(),\n    i: noop,\n    o: noop,\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var outgoingMessageText;\n  var _$$props$$$slots = $$props.$$slots,\n      slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n  validate_slots('DisplayMessageForm', slots, []);\n\n  var handleSubmit = function () {\n    //check that iFrame has loaded before accessing it and sending message\n    if (iFrameLoaded) {\n      console.log('Sending message to display from parent to child!');\n      document.getElementById('iframe').contentWindow.postMessage({\n        \"function\": 'displayMessage',\n        args: {\n          messageText: outgoingMessageText\n        }\n      }, \"http://localhost:3000/\");\n    } else {\n      console.log('iFrame not loaded yet!');\n    }\n  };\n\n  var writable_props = [];\n  Object.keys($$props).forEach(function (key) {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<DisplayMessageForm> was created with unknown prop '\" + key + \"'\");\n  });\n\n  function input_input_handler() {\n    outgoingMessageText = this.value;\n    $$invalidate(0, outgoingMessageText);\n  }\n\n  $$self.$capture_state = function () {\n    return {\n      iFrameLoaded: iFrameLoaded,\n      handleSubmit: handleSubmit,\n      outgoingMessageText: outgoingMessageText\n    };\n  };\n\n  $$self.$inject_state = function ($$props) {\n    if ('outgoingMessageText' in $$props) $$invalidate(0, outgoingMessageText = $$props.outgoingMessageText);\n  };\n\n  if ($$props && \"$$inject\" in $$props) {\n    $$self.$inject_state($$props.$$inject);\n  }\n\n  $: $$invalidate(0, outgoingMessageText = \"\");\n\n  return [outgoingMessageText, handleSubmit, input_input_handler];\n}\n\nvar DisplayMessageForm = /*#__PURE__*/function (_SvelteComponentDev) {\n  _inheritsLoose(DisplayMessageForm, _SvelteComponentDev);\n\n  function DisplayMessageForm(options) {\n    var _this;\n\n    _this = _SvelteComponentDev.call(this, options) || this;\n    init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {});\n    dispatch_dev(\"SvelteRegisterComponent\", {\n      component: _assertThisInitialized(_this),\n      tagName: \"DisplayMessageForm\",\n      options: options,\n      id: create_fragment.name\n    });\n    return _this;\n  }\n\n  return DisplayMessageForm;\n}(SvelteComponentDev);\n\nmodule.exportDefault(DisplayMessageForm);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stores.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/stores.js                                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  iFrameLoaded: function () {\n    return iFrameLoaded;\n  },\n  count: function () {\n    return count;\n  }\n});\nvar writable;\nmodule.link(\"svelte/store\", {\n  writable: function (v) {\n    writable = v;\n  }\n}, 0);\nvar iFrameLoaded = writable(false);\nvar count = writable(0);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/main.js                                                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar App;\nmodule.link(\"../imports/ui/App.svelte\", {\n  \"default\": function (v) {\n    App = v;\n  }\n}, 1);\nMeteor.startup(function () {\n  new App({\n    target: document.getElementById('app')\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".mjs\",\n    \".svelte\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"1acf43adbfe823db6805d15b7cbccf18e4e5d591","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/stores.js","client/main.js"],"names":["module","export","iFrameLoaded","count","writable","link","v","Meteor","App","startup","target","document","getElementById"],"mappingsc;AAACC,cAAY,EAAC,YAAU;AAAC,WAAOA,YAAP;AAAoB,GAA7C;AAA8CC,OAAK,EAAC,YAAU;AAAC,WAAOA,KAAP;AAAa;AAA5E,CAAd;AAA6F,IAAIC,QAAJ;AAAaJ,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA2B;AAACD,UAAQ,EAAC,UAASE,CAAT,EAAW;AAACF,YAAQ,GAACE,CAAT;AAAW;AAAjC,CAA3B,EAA8D,CAA9D;AAEnG,IAAMJ,YAAY,GAAGE,QAAQ,CAAC,KAAD,CAA7B;AAEA,IAAMD,KAAK,GAAGC,QAAQ,CAAC,CAAD,CAAtB,C;;;;;;;;;;;ACJP,IAAIG,MAAJ;AAAWP,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B;AAACE,QAAM,EAAC,UAASD,CAAT,EAAW;AAACC,UAAM,GAACD,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIE,GAAJ;AAAQR,MAAM,CAACK,IAAP,CAAY,0BAAZ,EAAuC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACE,OAAG,GAACF,CAAJ;AAAM;AAA3B,CAAvC,EAAoE,CAApE;AAIjFC,MAAM,CAACE,OAAP,CAAe,YAAM;AACnB,MAAID,GAAJ,CAAQ;AACNE,UAAM,EAAEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB;AADF,GAAR;AAGD,CAJD,E","file":"/app.js","sourcesContent":["import { writable } from \"svelte/store\";\n\nexport const iFrameLoaded = writable(false);\n\nexport const count = writable(0);\n","import { Meteor } from 'meteor/meteor';\nimport App from '../imports/ui/App.svelte';\n\n\nMeteor.startup(() => {\n  new App({\n    target: document.getElementById('app')\n  });\n});"]}}]