{"sourcePath":"imports/ui/Counter.svelte","path":"imports/ui/Counter.svelte","data":"var _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nvar SvelteComponentDev, add_location, detach_dev, dispatch_dev, element, init, insert_dev, listen_dev, noop, run_all, safe_not_equal, space, validate_slots;\nmodule.link(\"svelte/internal\", {\n  SvelteComponentDev: function (v) {\n    SvelteComponentDev = v;\n  },\n  add_location: function (v) {\n    add_location = v;\n  },\n  detach_dev: function (v) {\n    detach_dev = v;\n  },\n  dispatch_dev: function (v) {\n    dispatch_dev = v;\n  },\n  element: function (v) {\n    element = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  insert_dev: function (v) {\n    insert_dev = v;\n  },\n  listen_dev: function (v) {\n    listen_dev = v;\n  },\n  noop: function (v) {\n    noop = v;\n  },\n  run_all: function (v) {\n    run_all = v;\n  },\n  safe_not_equal: function (v) {\n    safe_not_equal = v;\n  },\n  space: function (v) {\n    space = v;\n  },\n  validate_slots: function (v) {\n    validate_slots = v;\n  }\n}, 0);\nvar count;\nmodule.link(\"./stores\", {\n  count: function (v) {\n    count = v;\n  }\n}, 1);\nvar file = \"imports/ui/Counter.svelte\";\n\nfunction create_fragment(ctx) {\n  var h2;\n  var t1;\n  var button0;\n  var t3;\n  var button1;\n  var mounted;\n  var dispose;\n  var block = {\n    c: function () {\n      function create() {\n        h2 = element(\"h2\");\n        h2.textContent = \"Change count on child\";\n        t1 = space();\n        button0 = element(\"button\");\n        button0.textContent = \"+\";\n        t3 = space();\n        button1 = element(\"button\");\n        button1.textContent = \"-\";\n        add_location(h2, file, 13, 0, 196);\n        add_location(button0, file, 14, 0, 227);\n        add_location(button1, file, 15, 0, 267);\n      }\n\n      return create;\n    }(),\n    l: function () {\n      function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      }\n\n      return claim;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, h2, anchor);\n        insert_dev(target, t1, anchor);\n        insert_dev(target, button0, anchor);\n        insert_dev(target, t3, anchor);\n        insert_dev(target, button1, anchor);\n\n        if (!mounted) {\n          dispose = [listen_dev(button0, \"click\",\n          /*increment*/\n          ctx[0], false, false, false), listen_dev(button1, \"click\",\n          /*increment*/\n          ctx[0], false, false, false)];\n          mounted = true;\n        }\n      }\n\n      return mount;\n    }(),\n    p: noop,\n    i: noop,\n    o: noop,\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(h2);\n        if (detaching) detach_dev(t1);\n        if (detaching) detach_dev(button0);\n        if (detaching) detach_dev(t3);\n        if (detaching) detach_dev(button1);\n        mounted = false;\n        run_all(dispose);\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var _$$props$$$slots = $$props.$$slots,\n      slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n  validate_slots('Counter', slots, []);\n\n  var increment = function () {\n    count.update(function (n) {\n      return n++;\n    });\n  };\n\n  var decrement = function () {\n    count.update(function (n) {\n      return n--;\n    });\n  };\n\n  var writable_props = [];\n  Object.keys($$props).forEach(function (key) {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(\"<Counter> was created with unknown prop '\" + key + \"'\");\n  });\n\n  $$self.$capture_state = function () {\n    return {\n      count: count,\n      increment: increment,\n      decrement: decrement\n    };\n  };\n\n  return [increment];\n}\n\nvar Counter = /*#__PURE__*/function (_SvelteComponentDev) {\n  _inheritsLoose(Counter, _SvelteComponentDev);\n\n  function Counter(options) {\n    var _this;\n\n    _this = _SvelteComponentDev.call(this, options) || this;\n    init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {});\n    dispatch_dev(\"SvelteRegisterComponent\", {\n      component: _assertThisInitialized(_this),\n      tagName: \"Counter\",\n      options: options,\n      id: create_fragment.name\n    });\n    return _this;\n  }\n\n  return Counter;\n}(SvelteComponentDev);\n\nmodule.exportDefault(Counter);","sourceMap":{"version":3,"sources":[],"names":[],"mappings":""}}