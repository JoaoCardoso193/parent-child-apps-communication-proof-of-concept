{"sourcePath":"imports/ui/CounterButtons.svelte","path":"imports/ui/CounterButtons.svelte","data":"var _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nvar SvelteComponentDev, add_location, append_dev, detach_dev, dispatch_dev, element, globals, init, insert_dev, listen_dev, noop, run_all, safe_not_equal, space, validate_slots;\nmodule.link(\"svelte/internal\", {\n  SvelteComponentDev: function (v) {\n    SvelteComponentDev = v;\n  },\n  add_location: function (v) {\n    add_location = v;\n  },\n  append_dev: function (v) {\n    append_dev = v;\n  },\n  detach_dev: function (v) {\n    detach_dev = v;\n  },\n  dispatch_dev: function (v) {\n    dispatch_dev = v;\n  },\n  element: function (v) {\n    element = v;\n  },\n  globals: function (v) {\n    globals = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  insert_dev: function (v) {\n    insert_dev = v;\n  },\n  listen_dev: function (v) {\n    listen_dev = v;\n  },\n  noop: function (v) {\n    noop = v;\n  },\n  run_all: function (v) {\n    run_all = v;\n  },\n  safe_not_equal: function (v) {\n    safe_not_equal = v;\n  },\n  space: function (v) {\n    space = v;\n  },\n  validate_slots: function (v) {\n    validate_slots = v;\n  }\n}, 0);\nvar iFrameLoaded;\nmodule.link(\"./stores\", {\n  iFrameLoaded: function (v) {\n    iFrameLoaded = v;\n  }\n}, 1);\nvar _globals = globals,\n    console_1 = _globals.console;\nvar file = \"imports/ui/CounterButtons.svelte\";\n\nfunction create_fragment(ctx) {\n  var div;\n  var h3;\n  var t1;\n  var button0;\n  var t3;\n  var button1;\n  var mounted;\n  var dispose;\n  var block = {\n    c: function () {\n      function create() {\n        div = element(\"div\");\n        h3 = element(\"h3\");\n        h3.textContent = \"Change count on child\";\n        t1 = space();\n        button0 = element(\"button\");\n        button0.textContent = \"+\";\n        t3 = space();\n        button1 = element(\"button\");\n        button1.textContent = \"-\";\n        add_location(h3, file, 26, 4, 815);\n        add_location(button0, file, 27, 4, 850);\n        add_location(button1, file, 28, 4, 894);\n        add_location(div, file, 25, 0, 805);\n      }\n\n      return create;\n    }(),\n    l: function () {\n      function claim(nodes) {\n        throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n      }\n\n      return claim;\n    }(),\n    m: function () {\n      function mount(target, anchor) {\n        insert_dev(target, div, anchor);\n        append_dev(div, h3);\n        append_dev(div, t1);\n        append_dev(div, button0);\n        append_dev(div, t3);\n        append_dev(div, button1);\n\n        if (!mounted) {\n          dispose = [listen_dev(button0, \"click\",\n          /*increment*/\n          ctx[0], false, false, false), listen_dev(button1, \"click\",\n          /*decrement*/\n          ctx[1], false, false, false)];\n          mounted = true;\n        }\n      }\n\n      return mount;\n    }(),\n    p: noop,\n    i: noop,\n    o: noop,\n    d: function () {\n      function destroy(detaching) {\n        if (detaching) detach_dev(div);\n        mounted = false;\n        run_all(dispose);\n      }\n\n      return destroy;\n    }()\n  };\n  dispatch_dev(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var _$$props$$$slots = $$props.$$slots,\n      slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n  validate_slots('CounterButtons', slots, []);\n\n  var increment = function () {\n    console.log('one increment trigger on parent');\n\n    if (iFrameLoaded) {\n      console.log('Incrementing count on child!');\n      document.getElementById('iframe').contentWindow.postMessage({\n        \"function\": 'incrementCount'\n      }, \"http://localhost:3000/\");\n    } else {\n      throw new Meteor.Error('iFrame not loaded yet!');\n    }\n  };\n\n  var decrement = function () {\n    if (iFrameLoaded) {\n      console.log('Decrementing count on child!');\n      document.getElementById('iframe').contentWindow.postMessage({\n        \"function\": 'decrementCount'\n      }, \"http://localhost:3000/\");\n    } else {\n      throw new Meteor.Error('iFrame not loaded yet!');\n    }\n  };\n\n  var writable_props = [];\n  Object.keys($$props).forEach(function (key) {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(\"<CounterButtons> was created with unknown prop '\" + key + \"'\");\n  });\n\n  $$self.$capture_state = function () {\n    return {\n      iFrameLoaded: iFrameLoaded,\n      increment: increment,\n      decrement: decrement\n    };\n  };\n\n  return [increment, decrement];\n}\n\nvar CounterButtons = /*#__PURE__*/function (_SvelteComponentDev) {\n  _inheritsLoose(CounterButtons, _SvelteComponentDev);\n\n  function CounterButtons(options) {\n    var _this;\n\n    _this = _SvelteComponentDev.call(this, options) || this;\n    init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {});\n    dispatch_dev(\"SvelteRegisterComponent\", {\n      component: _assertThisInitialized(_this),\n      tagName: \"CounterButtons\",\n      options: options,\n      id: create_fragment.name\n    });\n    return _this;\n  }\n\n  return CounterButtons;\n}(SvelteComponentDev);\n\nmodule.exportDefault(CounterButtons);","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}}