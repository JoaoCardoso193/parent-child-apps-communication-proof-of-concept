{"version":3,"sources":["meteor://ðŸ’»app/packages/rdb:svelte-meteor-data/index.js","meteor://ðŸ’»app/packages/rdb:svelte-meteor-data/autorun.js","meteor://ðŸ’»app/packages/rdb:svelte-meteor-data/cursor.js","meteor://ðŸ’»app/packages/rdb:svelte-meteor-data/reactive-var.js","meteor://ðŸ’»app/packages/rdb:svelte-meteor-data/subscribe.js","meteor://ðŸ’»app/packages/rdb:svelte-meteor-data/use-session.js","meteor://ðŸ’»app/packages/rdb:svelte-meteor-data/use-tracker.js"],"names":["module","link","Package","Meteor","isClient","_createForOfIteratorHelperLoose","default","v","_toConsumableArray","Tracker","current_component","schedule_update","dirty_components","_autorun","autorun","_nonreactive","nonreactive","svelteAwareAutorun","f","options","component","computation","apply","arguments","_autoStopComputation","prevAutorun","$$","on_destroy","push","stop","bind","ctx","fragment","dirty","_savedDirty","_stopComputations","_update","update","every","d","forEach","comp","stopped","onInvalidate","fill","mask","i","Mongo","Cursor","prototype","subscribe","set","mapFn","_transform","element","_projectionFn","result","_getRawObjects","ordered","map","handle","observe","_suppress_initial","addedAt","doc","slice","changedAt","old","removedAt","movedTo","from","to","splice","ReactiveVar","nextId","value","curValue","undefined","id","dep","_dependentsById","_id","invalidate","_subscribe","name","params","Array","callbacks","Object","create","length","last","onReady","pop","onError","onStop","some","subscription","readyCallbacks","errorCallbacks","fn","err","then","ready","export","useSession","Session","EJSON","parse","serialized","key","defaultValue","setDefault","_ensureKey","keyDeps","hasOwnProperty","call","keys","useTracker","reactiveFn"],"mappings":"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","file":"/packages/rdb_svelte-meteor-data.js","sourcesContent":["export { default as useTracker } from './use-tracker';\n\nimport './subscribe';\n\nif (Package['mongo']) {\n  import './cursor';\n}\n\nif (Package['reactive-var']) {\n  import './reactive-var';\n}\n\nif (Package['session'] && Meteor.isClient) {\n  export { default as useSession } from './use-session';\n}\n\n// Import this last, since it overwrites the built-in Tracker.autorun\nimport './autorun';\n","/**\n * Makes Tracker.autorun() computations automatically stop when the component is\n * destroyed, or, if run from a reactive Svelte computation, when the update\n * function is run again.\n */\n\nimport { Tracker } from 'meteor/tracker';\nimport { current_component, schedule_update, dirty_components } from 'svelte/internal';\n\n\nconst _autorun = Tracker.autorun;\nconst _nonreactive = Tracker.nonreactive;\n\nfunction svelteAwareAutorun(f, options) {\n  const component = current_component;\n  const computation = _autorun.apply(this, arguments);\n  if (component) {\n    // We're inside a Svelte component.  We have to stop the computation when\n    // the component is destroyed.\n    _autoStopComputation(computation, component);\n  }\n  return computation;\n}\n\nTracker.autorun = svelteAwareAutorun;\n\nTracker.nonreactive = function nonreactive(f) {\n  if (current_component) {\n    // A Tracker.autorun inside a Tracker.nonreactive should behave normally,\n    // without the special Svelte stuff.\n    const prevAutorun = Tracker.autorun;\n    Tracker.autorun = _autorun;\n    try {\n      return _nonreactive.apply(this, arguments);\n    } finally {\n      Tracker.autorun = prevAutorun;\n    }\n  } else {\n    return _nonreactive.apply(this, arguments);\n  }\n};\n\nfunction _autoStopComputation(computation, component) {\n  const $$ = component.$$;\n  $$.on_destroy.push(computation.stop.bind(computation));\n  if (!$$.ctx) {\n    // We're in initialization, so nothing else to do.\n    return;\n  }\n\n  if ($$.fragment && $$.dirty[0] === -1) {\n    // We have a fragment, but it's set to the initial dirty state, so we must\n    // be in on onMount or so.  Don't do anything special, then.\n    return;\n  }\n\n  // We are in a reactive Svelte update.  That means that we'll need to stop the\n  // computation the next time that it is run.  But we don't know when that is,\n  // because the next update may or may not hit this autorun again, depending on\n  // the dirty flags.\n  // So, we simply stop all computations the next time that the update is run,\n  // but we keep listening for invalidations, so that if one of them becomes\n  // invalid, we can force Svelte to re-run the updates to make it hit the\n  // autorun again.\n\n  // But first, remember which dirty flags made this autorun trigger, so that we\n  // can reuse these bits to force Svelte to re-hit the autorun.\n  // This will unfortunately most of the time be all bits set, since the first\n  // time it is called is usually during initialization.  But if the autorun is\n  // first enabled by a Svelte variable change, it will be a bit more efficient.\n  computation._savedDirty = [...$$.dirty];\n\n  if ($$._stopComputations) {\n    $$._stopComputations.push(computation);\n    return;\n  }\n\n  $$._stopComputations = [computation];\n\n  // Temporary hook around the update function so that it stops our computation\n  // the next time it is called.\n  const _update = $$.update;\n  $$.update = () => {\n    // Optimization: are we about to rerun everything?  If so, don't bother with\n    // onInvalidate, just stop the computations right here.\n    if ($$.dirty.every(d => (d === 0x7fffffff))) {\n      $$._stopComputations.forEach(comp => comp.stop());\n    } else {\n      // Otherwise, we are not sure whether all the autorun blocks will run\n      // again, so we prevent the computations from continuing to run, but will\n      // continue to watch it for changes.  If there is a change, we require the\n      // update to be run again.\n      for (const comp of $$._stopComputations) {\n        comp.stopped = true;\n        comp.onInvalidate(() => {\n          if ($$.dirty[0] === -1) {\n            // We're the first to mark it dirty since the last update.\n            dirty_components.push(component);\n            schedule_update();\n            $$.dirty.fill(0);\n          }\n          comp._savedDirty.forEach((mask, i) => {\n            $$.dirty[i] |= mask & 0x7fffffff;\n          });\n        });\n      }\n    }\n\n    // Leave everything as it was, so that the overhead is removed if the\n    // Tracker.autorun was under a condition that has now becomes false.\n    delete $$._stopComputations;\n    $$.update = _update;\n    return _update();\n  };\n}\n","/**\n * Implements the Svelte store contract for MongoDB cursors.\n */\n\nimport { Mongo } from 'meteor/mongo';\n\nMongo.Cursor.prototype.subscribe = function(set) {\n  // Set the initial result directly, without going through the callbacks\n  const mapFn = this._transform\n    ? element => this._transform(this._projectionFn(element))\n    : element => this._projectionFn(element);\n\n  let result = this._getRawObjects({ordered: true}).map(mapFn);\n\n  const handle = this.observe({\n    _suppress_initial: true,\n    addedAt: (doc, i) => {\n      result = [...result.slice(0, i), doc, ...result.slice(i)];\n      set(result);\n    },\n    changedAt: (doc, old, i) => {\n      result = [...result.slice(0, i), doc, ...result.slice(i + 1)];\n      set(result);\n    },\n    removedAt: (old, i) => {\n      result = [...result.slice(0, i), ...result.slice(i + 1)];\n      set(result);\n    },\n    movedTo: (doc, from, to) => {\n      result = [...result.slice(0, from), ...result.slice(from + 1)];\n      result.splice(to, 0, doc);\n      set(result);\n    },\n  });\n\n  set(result);\n  return handle.stop.bind(this);\n};\n","/**\n * Makes ReactiveVar behave as a Svelte store.\n */\n\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nlet nextId = 1;\n\nReactiveVar.prototype.subscribe = function subscribe(set) {\n  const value = this.curValue;\n  if (value !== undefined) {\n    set(value);\n  }\n  const id = `svelte-${nextId++}`;\n  this.dep._dependentsById[id] = {\n    _id: id,\n    invalidate: () => {\n      set(this.curValue);\n    },\n  };\n  return () => {\n    delete this.dep._dependentsById[id];\n  };\n};\n","/**\n * Overrides Meteor.subscribe to do the following things:\n * - Automatically stops the subscription when the component is destroyed\n * - Makes the return value usable in {#await} blocks\n */\n\nimport { current_component } from 'svelte/internal';\n\n\n_subscribe = Meteor.subscribe;\nMeteor.subscribe = function subscribe(name) {\n  const params = Array.from(arguments);\n  let callbacks = Object.create(null);\n  if (params.length > 1) {\n    // Preserve existing callbacks.\n    const last = params[params.length - 1];\n    if (last) {\n      // Last arg may be specified as a function, or as an object\n      if (typeof last === 'function') {\n        callbacks.onReady = params.pop();\n      } else if ([last.onReady, last.onError, last.onStop].some(f => typeof f === \"function\")) {\n        callbacks = params.pop();\n      }\n    }\n  }\n  params.push(callbacks);\n\n  let subscription;\n\n  // Collect callbacks to call when subscription is ready or has errored.\n  let readyCallbacks = [];\n  let errorCallbacks = [];\n  if (callbacks.onReady) {\n    readyCallbacks.push(callbacks.onReady);\n  }\n  if (callbacks.onError) {\n    errorCallbacks.push(callbacks.onError);\n  }\n  callbacks.onReady = () => {\n    readyCallbacks.forEach(fn => fn(subscription));\n    readyCallbacks.length = 0;\n  };\n  callbacks.onError = (err) => {\n    errorCallbacks.forEach(fn => fn(err));\n    errorCallbacks.length = 0;\n  };\n\n  subscription = _subscribe.apply(this, params);\n  if (current_component) {\n    current_component.$$.on_destroy.push(subscription.stop.bind(subscription));\n  }\n  subscription.then = (fn, err) => {\n    if (subscription.ready()) {\n      fn();\n    } else {\n      readyCallbacks.push(fn);\n      err && errorCallbacks.push(err);\n    }\n  };\n  return subscription;\n};\n","/**\n * This function wraps a Meteor Session variable as a Svelte store.\n */\n\nimport { Session } from \"meteor/session\";\nimport { EJSON } from \"meteor/ejson\";\n\nlet nextId = 1;\n\nconst parse = serialized =>\n  (serialized !== undefined && serialized !== 'undefined')\n    ? EJSON.parse(serialized)\n    : undefined;\n\nexport default function useSession(key, defaultValue) {\n  if (arguments.length > 1) {\n    Session.setDefault(key, defaultValue);\n  }\n\n  return {\n    subscribe(set) {\n      Session._ensureKey(key);\n      const dep = Session.keyDeps[key];\n      if (Object.prototype.hasOwnProperty.call(Session.keys, key)) {\n        set(parse(Session.keys[key]));\n      }\n\n      const id = `svelte-session-${nextId++}`;\n      dep._dependentsById[id] = {\n        _id: id,\n        invalidate: () => {\n          set(parse(Session.keys[key]));\n        },\n      };\n\n      return () => {\n        delete dep._dependentsById[id];\n      };\n    },\n    set(value) {\n      Session.set(key, value);\n    },\n  };\n};\n","/**\n * This function wraps a reactive Meteor computation as a Svelte store.\n */\n\nconst nonreactive = Tracker.nonreactive;\nconst autorun = Tracker.autorun;\n\nexport default function useTracker(reactiveFn) {\n  return {\n    subscribe(set) {\n      return nonreactive(() => {\n        const computation = autorun(() => set(reactiveFn()));\n        return computation.stop.bind(computation);\n      });\n    },\n  };\n};\n"]}